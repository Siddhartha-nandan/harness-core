logging:
  level: INFO
  loggers:
    org.glassfish.jersey: WARN
    allbegray.slack: WARN
    org.glassfish.jersey.server.ServerRuntime.Responder: "OFF"
  appenders:
    - type: console
      threshold: TRACE
      target: STDOUT
      logFormat: "%date{ISO8601} %green([%thread]) %highlight(%-5level) %cyan(%logger) - %msg %yellow(%replace(%mdc){'(.+)', '[$1]'}) %n"
    - type: gke-console
      threshold: TRACE
      target: STDOUT
      stackdriverLogEnabled: false

server:
  applicationConnectors:
    - type: http
      port: 14552
      maxRequestHeaderSize: 100KiB
  adminConnectors:
    - type: http
      port: 13002
  requestLog:
    appenders: []
  maxThreads: 1024

# explanation about fields is mentioned in DebeziumConfig class.
# Please follow the naming convention for override variables for the configs
debeziumConfigs:
  - isEnabled: ${IS_ENABLED_PIPELINE:-true}
    name: ${DEBEZIUM_NAME_PIPELINE:-pipeline} # unique for each debezium config
    mongodb.name: ${MONGODB_NAME_PIPELINE:-pmsMongo} # unique for each debezium config
    mongodb.ssl.enabled: ${MONGO_DB_SSL_ENABLED_PIPELINE:-false}
    database.include.list: ${DATABASE_INCLUDE_LIST_PIPELINE:-pms-harness}
    collection.include.list: ${COLLECTION_INCLUDE_LIST_PIPELINE:-pms-harness.planExecutionsSummary}
    redisStreamSize: ${REDIS_STREAM_SIZE_PIPELINE:-10000}
    snapshot.mode: ${SNAPSHOT_MODE_PIPELINE:-never}
    max.queue.size: ${MAX_QUEUE_SIZE_PIPELINE:-8192}
    max.batch.size: ${MAX_BATCH_SIZE_PIPELINE:-2048}
    max.queue.size.in.bytes: ${MAX_QUEUE_SIZE_IN_BYTES_PIPELINE:-1000000000}
    poll.interval.ms: ${POLL_INTERVAL_MS_PIPELINE:-3000}
    field.exclude.list: ${FIELD_EXCLUDE_LIST_PIPELINE:-pms-harness.planExecutionsSummary.layoutNodeMap}
    heartbeat.interval.ms: ${HEARTBEAT_INTERVAL_MS_PIPELINE:-10000}
    mongodb.connection.string: ${MONGODB_CONNECTION_STRING_PIPELINE:-mongodb://localhost:27017}
  - isEnabled: ${IS_ENABLED_PIPELINE_SNAPSHOT:-false}
    name: ${DEBEZIUM_NAME_PIPELINE_SNAPSHOT:-pipelineSnapshot} # unique for each debezium config
    mongodb.name: ${MONGODB_NAME_PIPELINE_SNAPSHOT:-pmsMongoSnapshot} # unique for each debezium config
    mongodb.ssl.enabled: ${MONGO_DB_SSL_ENABLED_PIPELINE_SNAPSHOT:-false}
    database.include.list: ${DATABASE_INCLUDE_LIST_PIPELINE_SNAPSHOT:-pms-harness}
    collection.include.list: ${COLLECTION_INCLUDE_LIST_PIPELINE_SNAPSHOT:-pms-harness.planExecutionsSummary}
    redisStreamSize: ${REDIS_STREAM_SIZE_PIPELINE_SNAPSHOT:-10000}
    snapshot.mode: ${SNAPSHOT_MODE_PIPELINE_SNAPSHOT:-initial}
    max.queue.size: ${MAX_QUEUE_SIZE_PIPELINE_SNAPSHOT:-8192}
    max.batch.size: ${MAX_BATCH_SIZE_PIPELINE_SNAPSHOT:-2048}
    max.queue.size.in.bytes: ${MAX_QUEUE_SIZE_IN_BYTES_PIPELINE_SNAPSHOT:-1000000000}
    poll.interval.ms: ${POLL_INTERVAL_MS_PIPELINE_SNAPSHOT:-3000}
    field.exclude.list: ${FIELD_EXCLUDE_LIST_PIPELINE_SNAPSHOT:-pms-harness.planExecutionsSummary.layoutNodeMap}
    heartbeat.interval.ms: ${HEARTBEAT_INTERVAL_MS_PIPELINE_SNAPSHOT:-10000}
    mongodb.connection.string: ${MONGODB_CONNECTION_STRING_PIPELINE_SNAPSHOT:-mongodb://localhost:27017}
    eventsFramework:
      redis:
        sentinel: false
        masterName: ${SNAPSHOT_EVENTS_FRAMEWORK_MASTER_NAME:-test}
        redisUrl: ${SNAPSHOT_EVENTS_FRAMEWORK_REDIS_URL:-redis://localhost:6379}
        sentinelUrls:
          - "redis://redis1:26379"
          - "redis://redis2:26379"
          - "redis://redis3:26379"
        envNamespace: ${SNAPSHOT_EVENTS_FRAMEWORK_ENV_NAMESPACE:-""}
        readMode: ${SNAPSHOT_EVENTS_FRAMEWORK_READ_MODE:-MASTER}
        nettyThreads: ${SNAPSHOT_EVENTS_FRAMEWORK_NETTY_THREADS:-16}
        useScriptCache:  ${SNAPSHOT_EVENTS_FRAMEWORK_USE_SCRIPT_CACHE:-true}
        userName: ${SNAPSHOT_EVENTS_FRAMEWORK_USERNAME:-}
        password: ${SNAPSHOT_EVENTS_FRAMEWORK_PASSWORD:-}
        sslConfig:
          enabled: ${SNAPSHOT_EVENTS_FRAMEWORK_SSL_CONFIG_ENABLED:-false}
          CATrustStorePath: ${SNAPSHOT_EVENTS_FRAMEWORK_CATRUST_STORE_PATH:-/tmp/ca_trust_store}
          CATrustStorePassword:  ${SNAPSHOT_EVENTS_FRAMEWORK_CATRUST_STORE_PASSWORD:-}
  - isEnabled: ${IS_ENABLED_APPLICATIONS:-false}
    name: ${DEBEZIUM_NAME_APPLICATIONS:-applications} # unique for each debezium config
    mongodb.name: ${MONGODB_NAME_APPLICATIONS:-harnessMongo} # unique for each debezium config
    mongodb.ssl.enabled: ${MONGO_DB_SSL_ENABLED_APPLICATIONS:-false}
    database.include.list: ${DATABASE_INCLUDE_LIST_APPLICATIONS:-harness}
    collection.include.list: ${COLLECTION_INCLUDE_LIST_APPLICATIONS:-harness.applications}
    redisStreamSize: ${REDIS_STREAM_SIZE_APPLICATIONS:-10000}
    snapshot.mode: ${SNAPSHOT_MODE_APPLICATIONS:-never}
    max.queue.size: ${MAX_QUEUE_SIZE_APPLICATIONS:-8192}
    max.batch.size: ${MAX_BATCH_SIZE_APPLICATIONS:-2048}
    max.queue.size.in.bytes: ${MAX_QUEUE_SIZE_IN_BYTES_APPLICATIONS:-1000000000}
    poll.interval.ms: ${POLL_INTERVAL_MS_APPLICATIONS:-3000}
    field.exclude.list: ${FIELD_EXCLUDE_LIST_APPLICATIONS:-harness.applications.keywords}
    heartbeat.interval.ms: ${HEARTBEAT_INTERVAL_APPLICATIONS:-10000}
    mongodb.connection.string: ${MONGODB_CONNECTION_STRING_APPLICATIONS:-mongodb://localhost:27017}

eventsFramework:
  redis:
    sentinel: false
    masterName: "test"
    redisUrl: "redis://localhost:6379"
    sentinelUrls:
      - "redis://redis1:26379"
      - "redis://redis2:26379"
      - "redis://redis3:26379"
    envNamespace: ""
    readMode: MASTER
    nettyThreads: 16
    useScriptCache: true
    userName: ""
    password: ""
    sslConfig:
      enabled: false
      CATrustStorePath: "/tmp/ca_trust_store"
      CATrustStorePassword: ""

redisLockConfig:
  sentinel: false
  masterName: "test"
  redisUrl: "redis://localhost:6379"
  sentinelUrls:
    - "redis://redis1:26379"
    - "redis://redis2:26379"
    - "redis://redis3:26379"
  envNamespace: ""
  readMode: MASTER
  nettyThreads: 16
  useScriptCache: true
  userName: ""
  password: ""

distributedLockImplementation: REDIS

cfClientConfig:
  # TODO: Need a key plugged-in here
  apiKey: ""
  configUrl: "https://config.feature-flags.uat.harness.io/api/1.0"
  eventUrl: "https://event.feature-flags.uat.harness.io/api/1.0"
  analyticsEnabled: true
  connectionTimeout: 10000
  readTimeout: 45000
  bufferSize: 10240
  retries: 6
  sleepInterval: 5000

featureFlagConfig:
  featureFlagSystem: LOCAL
  syncFeaturesToCF: false