managerUrl: https://localhost:9090/api/
server:
  applicationConnectors:
    - type: h2
      port: 7070
      keyStorePath: keystore.jks
      keyStorePassword: password
      trustStorePath: ${JAVA_HOME}/lib/security/cacerts
      certAlias: localhost
      validateCerts: false
      maxRequestHeaderSize: 100KiB
    - type: http
      port: 4457
      maxRequestHeaderSize: 100KiB
  adminConnectors:
    - type: h2
      port: 7071
      keyStorePath: keystore.jks
      keyStorePassword: password
      trustStorePath: ${JAVA_HOME}/lib/security/cacerts
      certAlias: localhost
      validateCerts: false
  requestLog:
    appenders: []

scheduler:
  schedulerName: verification_scheduler
  instanceId: verification
  tablePrefix: quartz_verification
  threadCount: 25

dataStorageMode: MONGO

distributedLockImplementation: REDIS

logging:
  level: INFO
  loggers:
    com.novemberain.quartz.mongodb: WARN
    org.quartz.plugins: WARN
    org.glassfish.jersey: WARN
    allbegray.slack: WARN
    # the following is to suppress "Error retrieving job for trigger XYZ, setting trigger state to ERROR."
    # TODO: remove this suppression when the mentioned issue is resolved
    com.novemberain.quartz.mongodb.TriggerRunner: "OFF"
  appenders:
    - type: console
      threshold: TRACE
      target: STDOUT
      logFormat: "%date{ISO8601} %green([%thread]) %highlight(%-5level) %blue(%X{executionId}) %cyan(%logger) - %msg %n"
    - type: gke-console
      threshold: TRACE
      target: STDOUT
      stackdriverLogEnabled: false
    - type: file
      threshold: TRACE
      currentLogFilename: /opt/harness/logs/pod.log
      archive: true
      archivedLogFilenamePattern: /opt/harness/logs/pod.%d{yyyy-MM-dd}.%i.log
      archivedFileCount: 10
      maxFileSize: 50MB
      totalSizeCap: 1GB
      logFormat: "%date{ISO8601} %green([%thread]) %highlight(%-5level) %cyan(%logger) - %msg %yellow(%replace(%mdc){'(.+)', '[$1]'}) %n"

mongo:
  uri: mongodb://localhost:27017/harness
  connectTimeout: 30000
  serverSelectionTimeout: 90000
  socketTimeout: 360000
  maxConnectionIdleTime: 600000
  connectionsPerHost: 300
  mongoSSLConfig:
    mongoSSLEnabled: false
    mongoTrustStorePath:
    mongoTrustStorePassword:
  aliasDBName: harness

dms-mongo:
  uri: mongodb://localhost:27017/harness
  connectTimeout: 30000
  serverSelectionTimeout: 90000
  socketTimeout: 360000
  maxConnectionIdleTime: 600000
  connectionsPerHost: 300
  aliasDBName: dms-harness

cfClientConfig:
  apiKey: ""
  configUrl: "https://config.feature-flags.uat.harness.io/api/1.0"
  eventUrl: "https://event.feature-flags.uat.harness.io/api/1.0"
  analyticsEnabled: true
  connectionTimeout: 10000
  readTimeout: 45000
  retries: 6
  sleepInterval: 5000

featureFlagConfig:
  featureFlagSystem: LOCAL
  syncFeaturesToCF: false

serviceGuardIteratorConfig:
  threadPoolCount: 3
  enabled: true
  targetIntervalInSeconds: 60

redisLockConfig:
  sentinel: false
  masterName: "test"
  redisUrl: "redis://localhost:6379"
  sentinelUrls:
    - "redis://redis1:26379"
    - "redis://redis2:26379"
    - "redis://redis3:26379"
  envNamespace: ""
  readMode: MASTER
  nettyThreads: 16
  useScriptCache: true
  userName: ""
  password: ""