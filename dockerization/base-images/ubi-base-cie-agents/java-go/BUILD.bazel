load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_pull", "container_push")
load("@io_bazel_rules_docker//docker/util:run.bzl", "container_run_and_commit_layer")
load("@rules_pkg//:pkg.bzl", "pkg_tar")

KUBECTL_VERSION = "v1.13.2"

PLATFORM = "linux"

HELM_VERSION = "2.17.0"

container_run_and_commit_layer(
    name = "java-go-run",
    commands = [
        "microdnf install yum python3",
        "ln -s /usr/bin/python3 /usr/bin/python",
        "mkdir -p /deployments",
        "curl -Lo /etc/yum.repos.d/mongodb-org-4.4.repo https://harness.jfrog.io/artifactory/BuildsTools/yum-repos/mongodb-org-4.4.repo",
        "curl -Lo /etc/yum.repos.d/google-cloud-sdk.repo https://harness.jfrog.io/artifactory/BuildsTools/yum-repos/google-cloud-sdk.repo",
        "yum install -y mongodb-org-shell google-cloud-cli autoconf binutils gdb glibc-devel redhat-rpm-config rpm-build wget git gcc gcc-c++ jq bc zlib-devel yum-utils --nodocs --skip-broken",
        "yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo",
        "yum install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin",
        "curl -Lo /usr/local/bin/bazel https://github.com/bazelbuild/bazelisk/releases/download/v1.7.4/bazelisk-linux-amd64",
        "chown root:root /usr/local/bin/bazel",
        "chmod 0755 /usr/local/bin/bazel",
        "cd /",
        "rm -rf /tmp/*",
        "yum clean all",
        "rm -rf /var/tmp/yum-*",
        "curl  -s -L -o kubectl https://app.harness.io/storage/harness-download/kubernetes-release/release/%s/bin/%s/amd64/kubectl" % (KUBECTL_VERSION, PLATFORM),
        "chmod +x kubectl",
        "mv kubectl /usr/bin",
        "wget -q https://get.helm.sh/helm-v%s-linux-amd64.tar.gz -O - | tar -xzO linux-amd64/helm > /usr/local/bin/helm" % HELM_VERSION,
        "chmod +x /usr/local/bin/helm",
        "curl -O https://dl.google.com/go/go1.18.linux-amd64.tar.gz",
        "tar -xvf go1.18.linux-amd64.tar.gz",
        "mv go/ /usr/local/",
        "rm -rf go1.18.linux-amd64.tar.gz",
    ],
    docker_run_flags = [
        "--user=root",
    ],
    image = "@ubi-java-base//image",
    tags = [
        "manual",
        "no-cache",
        "no-ide",
    ],
)

pkg_tar(
    name = "files",
    srcs = [
        "run-java.sh",
    ],
    mode = "0500",
    owner = "65534.65534",
    package_dir = "/deployments",
    tags = [
        "manual",
        "no-cache",
        "no-ide",
    ],
)

pkg_tar(
    name = "repos",
    srcs = [
        "google-cloud-sdk.repo",
        "mongodb-org-4.4.repo",
    ],
    mode = "0500",
    owner = "0.0",
    package_dir = "/etc/yum.repos.d/",
    tags = [
        "manual",
        "no-cache",
        "no-ide",
    ],
)

container_image(
    name = "java-go-image",
    base = "@ubi-java-base//image",
    cmd = [
        "/deployments/run-java.sh",
    ],
    env = {
        "JAVA_APP_DIR": "/deployments",
        "JAVA_MAJOR_VERSION": "11",
        "LC_ALL": "en_US.UTF-8",
        "CC": "/usr/bin/gcc",
        "CXX": "/usr/bin/g++",
        "PATH": "$${PATH}:/opt/gsutil:/usr/local/go/bin",
        "GOROOT": "/usr/local/go",
        "GOPATH": "/usr/local",
    },
    layers = [
        ":java-go-run",
    ],
    tags = [
        "manual",
        "no-cache",
        "no-ide",
    ],
    tars = [
        ":files",
        ":repos",
    ],
    user = "0",
    workdir = "/opt/harness",
)

#If "registry or "repository" or "tag" is changed then corresponding container_pull macro in WORKSPACE file also has be to modified.
container_push(
    name = "java-go-push",
    format = "Docker",
    image = "java-go-image",
    registry = "us.gcr.io",
    repository = "platform-205701/harness/java-go-bazel-test",
    tag = "latest-test",
    tags = [
        "manual",
        "no-cache",
        "no-ide",
    ],
)
