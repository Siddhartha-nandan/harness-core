# Copyright 2022 Harness Inc. All rights reserved.
# Use of this source code is governed by the PolyForm Free Trial 1.0.0 license
# that can be found in the licenses directory at the root of this repository, also available at
# https://polyformproject.org/wp-content/uploads/2020/05/PolyForm-Free-Trial-1.0.0.txt.

load("//:tools/bazel/docker/docker-utils.bzl", "docker_layers", "docker_image", "docker_push", "docker_pkg")
load("@rules_pkg//:pkg.bzl", "pkg_tar")

docker_layers(
    name = "dms-onprem-run",
    commands = [
        "curl -L https://harness.jfrog.io/artifactory/BuildsTools/docker/inspectit-ocelot-agent/inspectit-ocelot-agent-1.16.0.jar --output inspectit-ocelot-agent-1.16.0.jar",
        "chmod 711 inspectit-ocelot-agent-1.16.0.jar",
    ],
)

docker_layers(
    name = "dms-saas-run",
    commands = [
            "curl https://get.et.harness.io/releases/latest/nix/harness-et-agent.tar.gz --output harness-et-agent.tar.gz",
            "tar -xzf harness-et-agent.tar.gz -C /opt/harness",
            "rm /opt/harness/harness-et-agent.tar.gz",
            "curl https://harness.jfrog.io/artifactory/BuildsTools/docker/apm/appd/AppServerAgent-1.8-21.11.2.33305.zip --output AppServerAgent-1.8-21.11.2.33305.zip",
            "curl https://harness.jfrog.io/artifactory/BuildsTools/docker/apm/opentelemetry/opentelemetry-javaagent.jar --output opentelemetry-javaagent.jar",
            "chmod 711 /opt/harness/harness AppServerAgent-1.8-21.11.2.33305.zip opentelemetry-javaagent.jar",
        ],
)

docker_pkg(
    name = "scripts",
    srcs = glob([
        "scripts/*",
        ]),
)

docker_pkg(
    name = "files",
    srcs = [
        "//:protocol.info",
        "//270-delegate-service-app:keystore.jks",
        "//270-delegate-service-app:config.yml",
        "//270-delegate-service-app/src/main/resources:redisson-jcache.yaml",
    ],
    files = {
        "//270-delegate-service-app:module_deploy.jar": "delegate-service-capsule.jar"
        },
)

docker_image(
    name = "dms-saas-image",
    dockerlayers = [
            ":dms-saas-run"
            ],
    cmd = [
        "/bin/bash", "-c",
        "./run.sh",
        ],
    filestocopy = [
        ":files",
        ":scripts",
    ],
)

#Pass the TAG from the bazel run command by passing --define=TAG=TagValue
docker_push(
        name = "dms-saas-push",
        image = "dms-saas-image",
        repository = "platform-205701/harness/harness-services-bazel/dms-saas-bazel-test",
        imagetag = "$(TAG)",
)

docker_image(
    name = "dms-onprem-image",
    dockerlayers = [
            ":dms-onprem-run"
            ],
    cmd = [
        "/bin/bash", "-c",
        "./run.sh",
        ],
    filestocopy = [
        ":files",
        ":scripts",
    ],
)

#Pass the TAG from the bazel run command by passing --define=TAG=TagValue
docker_push(
        name = "dms-onprem-push",
        image = "dms-onprem-image",
        repository = "platform-205701/harness/harness-services-bazel/dms-onprem-bazel-test",
        imagetag = "$(TAG)",
)
