// Copyright 2021 Harness Inc. All rights reserved.
// Use of this source code is governed by the PolyForm Shield 1.0.0 license
// that can be found in the licenses directory at the root of this repository, also available at
// https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt.

syntax = "proto3";

package io.harness.delegate;

option java_multiple_files = true;
option go_package = "920_delegate_service_beans";

import "955-delegate-beans/src/main/proto/io/harness/delegate/capability.proto";
import "920-delegate-service-beans/src/main/proto/io/harness/delegate/task.proto";
import "955-delegate-beans/src/main/proto/io/harness/delegate/account.proto";
import "920-delegate-service-beans/src/main/proto/io/harness/callback/callback.proto";

import "google/protobuf/duration.proto";

// Task metadata
message DelegateTaskMetaData {
   TaskId task_id = 1;
   AccountId account_id = 2;
   string description = 3;
   bool ng = 4;
   TaskMode mode = 5;
   TaskType type = 6;
   bool force_execute = 7;
   repeated string eligibleToExecuteDelegateIds = 8;
   callback.DelegateCallbackToken callback_token = 9;
   DelegateTaskRank rank = 10;
   string workflowExecutionId = 11;
   TaskOwner taskOwner = 12;
   google.protobuf.Duration timeout = 13;
   repeated TaskSelector selectors = 14;
   bool selectionTrackingLogEnabled = 15;
   TaskLogAbstractions log_abstractions = 16;
   bool execute_on_harness_hosted_delegates = 17;
   bool parked = 18;
   bool emitEvent = 19;
   string stageId = 20;
   bool isAsync = 21;
}


// Task data
message DelegateTaskData {
  bytes task_data = 1;
  bool async = 2;
  string taskType =3;
  bytes task_parameters = 4;
}

// Task Capabilities
message Capabilities {
  repeated Capability capabilities = 1;
}

// Secrets
message Secrets {
 map<string, string> expressions = 1;
 int64 expression_functor_token = 2;

}

message DelegateTaskPackage {
  AccountId account_id = 1;
  string delegateTaskId = 2;
  string delegateId = 3;
  string delegateInstanceId = 4;
  string logStreamingToken = 5;
  string delegateCallbackToken = 6;
  bytes task_parameters = 7;

}
enum DelegateTaskRank {
   OPTIONAL = 0;
   IMPORTANT  = 1;
   CRITICAL  = 2;
}

message TaskOwner {
  string accountIdentifier = 1;
  string orgIdentifier = 2;
  string projectIdentifier = 3;
}

enum DelegateTaskStatus {
   QUEUED = 0;
   STARTED = 1;
   ERROR = 2;
}





