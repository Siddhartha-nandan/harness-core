// Copyright 2021 Harness Inc. All rights reserved.
// Use of this source code is governed by the PolyForm Shield 1.0.0 license
// that can be found in the licenses directory at the root of this repository, also available at
// https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt.

syntax = "proto3";

package io.harness.delegate;

import "920-delegate-service-beans/src/main/proto/io/harness/delegate/resource.proto";
import "920-delegate-service-beans/src/main/proto/io/harness/delegate/log_config.proto";
option go_package = "920_delegate_service_beans";

option java_multiple_files = true;

message ExecutionInfrastructure {
  LogConfig log_config = 1;
  oneof infraSpec {
    K8sInfraSpec k8Infraspec = 3;
    // VMInfraSpec vmInfraSpec = 4;
  }
}

message K8sInfraSpec {
  repeated K8sTaskContainer tasks = 1;
  map<string, string> env = 3;           // Any global env variables. These envs will be applied to all containers
  SecurityContext security_context = 4;  // Startup user id for the execution infra
  repeated Resource resources = 5;       // Any global resources like shared volumes
}

message K8sTaskContainer {
  // TODO: should we add step id here ?
  ContainerSpec container_spec = 2;      // Spec for the container environment
  SecurityContext security_context = 3;  // Startup user id for the execution infra
}

message ContainerSpec {
  string image = 1;                   // Docker image tag
  repeated int64 port = 2;            // Port exposed for the container
  ComputingResource resource = 3;  // Resource requirements for infra types that need it (e.g. K8S CPU/Mem)
  map<string, string> env = 4;        // Env variables
  repeated string command = 5;         // Command to be executed
  repeated string args = 6;            // Args to be passed
}

/*
  Defines security context for running a task. Note these values would always be there (unless entire context is
  omitted) with their defaults. E.g.
    privileged = false; runAsUser = 0 (root); runAsNonRoot = false; allowPrivilegeEscalation = false;
 */
message SecurityContext {
  bool allowPrivilegeEscalation = 1;
  bool privileged = 2;
  string procMount = 3;
  bool readOnlyRootFilesystem = 4;
  bool runAsNonRoot = 5;
  int64 runAsGroup = 6;
  int64 runAsUser = 7;
  repeated string add_capability = 8;
  repeated string drop_capability = 9;
}
