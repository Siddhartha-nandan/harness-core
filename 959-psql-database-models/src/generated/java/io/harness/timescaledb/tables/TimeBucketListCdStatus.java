/*
 * Copyright 2023 Harness Inc. All rights reserved.
 * Use of this source code is governed by the PolyForm Free Trial 1.0.0 license
 * that can be found in the licenses directory at the root of this repository, also available at
 * https://polyformproject.org/wp-content/uploads/2020/05/PolyForm-Free-Trial-1.0.0.txt.
 */

/*
 * This file is generated by jOOQ.
 */
package io.harness.timescaledb.tables;

import io.harness.timescaledb.Public;
import io.harness.timescaledb.tables.records.TimeBucketListCdStatusRecord;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TimeBucketListCdStatus extends TableImpl<TimeBucketListCdStatusRecord> {
  private static final long serialVersionUID = 1L;

  /**
   * The reference instance of <code>public.time_bucket_list_cd_status</code>
   */
  public static final TimeBucketListCdStatus TIME_BUCKET_LIST_CD_STATUS = new TimeBucketListCdStatus();

  /**
   * The class holding records for this type
   */
  @Override
  public Class<TimeBucketListCdStatusRecord> getRecordType() {
    return TimeBucketListCdStatusRecord.class;
  }

  /**
   * The column <code>public.time_bucket_list_cd_status.status</code>.
   */
  public final TableField<TimeBucketListCdStatusRecord, String> STATUS =
      createField(DSL.name("status"), SQLDataType.CLOB, this, "");

  /**
   * The column <code>public.time_bucket_list_cd_status.startts</code>.
   */
  public final TableField<TimeBucketListCdStatusRecord, Long> STARTTS =
      createField(DSL.name("startts"), SQLDataType.BIGINT, this, "");

  private TimeBucketListCdStatus(Name alias, Table<TimeBucketListCdStatusRecord> aliased) {
    this(alias, aliased, new Field[5]);
  }

  private TimeBucketListCdStatus(Name alias, Table<TimeBucketListCdStatusRecord> aliased, Field<?>[] parameters) {
    super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.function());
  }

  /**
   * Create an aliased <code>public.time_bucket_list_cd_status</code> table reference
   */
  public TimeBucketListCdStatus(String alias) {
    this(DSL.name(alias), TIME_BUCKET_LIST_CD_STATUS);
  }

  /**
   * Create an aliased <code>public.time_bucket_list_cd_status</code> table reference
   */
  public TimeBucketListCdStatus(Name alias) {
    this(alias, TIME_BUCKET_LIST_CD_STATUS);
  }

  /**
   * Create a <code>public.time_bucket_list_cd_status</code> table reference
   */
  public TimeBucketListCdStatus() {
    this(DSL.name("time_bucket_list_cd_status"), null);
  }

  @Override
  public Schema getSchema() {
    return Public.PUBLIC;
  }

  @Override
  public TimeBucketListCdStatus as(String alias) {
    return new TimeBucketListCdStatus(DSL.name(alias), this, parameters);
  }

  @Override
  public TimeBucketListCdStatus as(Name alias) {
    return new TimeBucketListCdStatus(alias, this, parameters);
  }

  /**
   * Rename this table
   */
  @Override
  public TimeBucketListCdStatus rename(String name) {
    return new TimeBucketListCdStatus(DSL.name(name), null, parameters);
  }

  /**
   * Rename this table
   */
  @Override
  public TimeBucketListCdStatus rename(Name name) {
    return new TimeBucketListCdStatus(name, null, parameters);
  }

  // -------------------------------------------------------------------------
  // Row2 type methods
  // -------------------------------------------------------------------------

  @Override
  public Row2<String, Long> fieldsRow() {
    return (Row2) super.fieldsRow();
  }

  /**
   * Call this table-valued function
   */
  public TimeBucketListCdStatus call(
      Long pInterval, Long pStarttsBegin, Long pStarttsEnd, String[] pStatusList, Boolean pDebug) {
    TimeBucketListCdStatus result = new TimeBucketListCdStatus(DSL.name("time_bucket_list_cd_status"), null,
        new Field[] {DSL.val(pInterval, SQLDataType.BIGINT), DSL.val(pStarttsBegin, SQLDataType.BIGINT),
            DSL.val(pStarttsEnd, SQLDataType.BIGINT), DSL.val(pStatusList, SQLDataType.CLOB.getArrayDataType()),
            DSL.val(pDebug, SQLDataType.BOOLEAN.defaultValue(DSL.field("false", SQLDataType.BOOLEAN)))});

    return aliased() ? result.as(getUnqualifiedName()) : result;
  }

  /**
   * Call this table-valued function
   */
  public TimeBucketListCdStatus call(Field<Long> pInterval, Field<Long> pStarttsBegin, Field<Long> pStarttsEnd,
      Field<String[]> pStatusList, Field<Boolean> pDebug) {
    TimeBucketListCdStatus result = new TimeBucketListCdStatus(DSL.name("time_bucket_list_cd_status"), null,
        new Field[] {pInterval, pStarttsBegin, pStarttsEnd, pStatusList, pDebug});

    return aliased() ? result.as(getUnqualifiedName()) : result;
  }
}
