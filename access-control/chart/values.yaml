# Default values for access-control
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets
# --global.imageRegistry Global Docker image registry
# --global.imagePullSecrets Global Docker registry secret names as an array
# --global.storageClass Global StorageClass for Persistent Volume(s)
global:
  commonAnnotations: {}
  commonLabels: {}
  kubeVersion: ""
  loadbalancerURL: ""
  ha: true
  stackDriverLoggingEnabled: false
  database:
    postgres:
      ## - installed = true if installed within cluster
      installed: true
      ## - protocol to use for connection
      protocol: postgres
      ## - host array for external
      hosts:
        - postgres:5432
      ## - secret name containing external values
      secretName: ""
      ## - key within secret containing username
      userKey: ""
      ## - key within secret containing password
      passwordKey: ""
      ## - extra arguments set to connection string
      extraArgs: ""
    mongo:
      installed: true
      protocol: mongodb
      # --  provide default values if mongo.installed is set to false
      hosts: []
      secretName: ""
      userKey: ""
      passwordKey: ""
      extraArgs: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              MONGO_USER: ""
              MONGO_PASSWORD: ""
        secretManagement:
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                MONGO_USER:
                  name: ""
                  property: ""
                MONGO_PASSWORD:
                  name: ""
                  property: ""
    timescaledb:
      installed: true
      protocol: "jdbc:postgresql"
      # --  provide default values if mongo.installed is set to false
      hosts:
        - timescaledb-single-chart:5432
      secretName: ""
      userKey: ""
      passwordKey: ""
      extraArgs: ""
    redis:
      installed: true
      protocol: "redis"
      # --  provide default values if redis.installed is set to false
      hosts:
        - redis:6379
      secretName: ""
      userKey: ""
      passwordKey: ""
      extraArgs: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              REDIS_USERNAME: ""
              REDIS_PASSWORD: ""
        secretManagement:
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                REDIS_USERNAME:
                  name: ""
                  property: ""
                REDIS_PASSWORD:
                  name: ""
                  property: ""
  monitoring:
    enabled: false
    port: 8889
    path: /metrics

  ingress:
    # -- create ingress objects
    enabled: false
    # -- set ingress object classname
    className: harness
    # -- set host of ingressObjects
    hosts:
      - my-host.example.org
    # -- set tls for ingress objects
    tls:
      enabled: true
      secretName: ''
    # -- add annotations to ingress objects
    objects:
      annotations: {}
  istio:
    # -- create virtualServices objects
    enabled: false
    # -- create gateway and use in virtualservice
    gateway:
      create: false
    # -- if gateway not created, use specified gateway and host
    virtualService:
      gateways:
      hosts:
  imagePullSecrets: []

# --mongoHosts List of mongo hosts
mongoHosts: []

# --replicaCount Number of pods
##
replicaCount: 1

redis:
  protocol: ""
  hosts: []
  secretName: ""
  userKey: ""
  passwordKey: ""
  extraArgs: ""
  secrets:
    kubernetesSecrets:
      - secretName: ""
        keys:
          REDIS_USERNAME: ""
          REDIS_PASSWORD: ""
    secretManagement:
      externalSecretsOperator:
        - secretStore:
            name: ""
            kind: ""
          remoteKeys:
            REDIS_USERNAME:
              name: ""
              property: ""
            REDIS_PASSWORD:
              name: ""
              property: ""

database:
  mongo:
    accesscontrol:
      enabled: false
      protocol: ""
      hosts: []
      extraArgs: ""
      secrets:
        kubernetesSecrets:
          - secretName: ""
            keys:
              MONGO_USER: ""
              MONGO_PASSWORD: ""
        secretManagement:
          externalSecretsOperator:
            - secretStore:
                name: ""
                kind: ""
              remoteKeys:
                MONGO_USER:
                  name: ""
                  property: ""
                MONGO_PASSWORD:
                  name: ""
                  property: ""

# -- deployment.updateStrategy.type Deployment strategy type
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#update-strategies
## e.g:
updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%
# -- schedulerName Specifies the schedulerName, if it's nil uses kube-scheduler
## https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
schedulerName: ""
# -- terminationGracePeriodSeconds In seconds, time the given to the pod needs to terminate gracefully
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
##
terminationGracePeriodSeconds: "30"
# -- set progressDealineSeconds in seconds, number of seconds the Deployment controller waits before indicating failure
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
progressDeadlineSeconds: 720
# -- Configurations for Harness application
config:
  DEPLOY_MODE: KUBERNETES_ONPREM
  LOGGING_LEVEL: INFO
  EVENTS_CONFIG_USE_SENTINEL: true
  EVENTS_CONFIG_SENTINEL_MASTER_NAME: harness-redis
  EVENTS_CONFIG_REDIS_SENTINELS:
  LOCK_CONFIG_USE_SENTINEL: true
  LOCK_CONFIG_SENTINEL_MASTER_NAME: harness-redis
  LOCK_CONFIG_REDIS_SENTINELS:
  RESOURCE_GROUP_ITERATOR_ENABLED: true
  RESOURCE_GROUP_ITERATOR_INTERVAL: 3600
  USER_GROUP_ITERATOR_ENABLED: true
  USER_GROUP_ITERATOR_INTERVAL: 3600
  USER_ITERATOR_ENABLED: true
  USER_ITERATOR_INTERVAL: 3600
  SERVICEACCOUNT_ITERATOR_ENABLED: true
  SERVICEACCOUNT_ITERATOR_INTERVAL: 3600
  SUPPORTPREFERENCE_ITERATOR_ENABLED: true
  SUPPORTPREFERENCE_ITERATOR_INTERVAL: 600
  SCOPE_ITERATOR_ENABLED: true
  SCOPE_ITERATOR_INTERVAL: 3600
  RESOURCE_GROUP_CLIENT_BASE_URL:
  USER_CLIENT_BASE_URL:
  USER_GROUP_CLIENT_BASE_URL:
  SERVICEACCOUNT_CLIENT_BASE_URL:
  ACCOUNT_CLIENT_BASE_URL:
  FEATURE_FLAG_CLIENT_BASE_URL:
  PROJECT_CLIENT_BASE_URL:
  OFFSET_FLUSH_INTERVAL_MS: 10000
  MONGODB_SSL_ENABLED: false
  AGGREGATOR_ENABLED: true
  ENABLE_AUTH: true
  ACCESS_CONTROL_PREFERENCE_ENABLED: true
  NOTIFICATION_SLACK_WEBHOOK_URL: ""
  NOTIFICATION_ENVIRONMENT: ONPREM
  ENABLE_ACCESS_CONTROL: true
  ACCESS_CONTROL_SERVICE_BASE_URL:
  ENABLE_AUDIT: true
  AUDIT_CLIENT_BASE_URL:
  DISTRIBUTED_LOCK_IMPLEMENTATION: REDIS
  GOOGLE_APPLICATION_CREDENTIALS: /opt/harness/monitoring/stackdriver.json
  APPDYNAMICS_AGENT_ACCOUNT_NAME: harness-prod
  APPDYNAMICS_AGENT_APPLICATION_NAME: envSpecific
  APPDYNAMICS_AGENT_TIER_NAME: accesscontrol-service
  APPDYNAMICS_CONTROLLER_HOST_NAME: harness-prod.saas.appdynamics.com
  APPDYNAMICS_CONTROLLER_PORT: "443"
  APPDYNAMICS_CONTROLLER_SSL_ENABLED: "true"
  BASE_PATH_PREFIX: "/gateway/authz/api"
  BATCH_SIZE_FOR_ACL_CREATION: 5000
  CF_CLIENT_ANALYTICS_ENABLED: true
  CF_CLIENT_BUFFER_SIZE: 10240
  CF_CLIENT_CONFIG_URL: https://config.feature-flags.uat.harness.io/api/1.0
  CF_CLIENT_CONNECTION_TIMEOUT: 10000
  CF_CLIENT_EVENT_URL: https://event.feature-flags.uat.harness.io/api/1.0
  CF_CLIENT_READ_TIMEOUT: 45000
  CF_RETRIES: 6
  CF_SLEEP_INTERVAL: 5000
  COLLECTION_INCLUDE_LIST: harness-rbac.roleassignments,harness-rbac.resourcegroups
  DATABASE_INCLUDE_LIST: harness-rbac
  DISABLE_REDUNDANT_ACLS: false
  ENABLE_ACL_PROCESSING_THROUGH_OUTBOX: true
  ENABLE_APPDYNAMICS: true
  ENABLE_HTTP_LOGGING: false
  ENABLE_OPENTELEMETRY: false
  ENABLE_PARALLEL_PROCESSING_OF_USERGROUP_UPDATES: true
  ENFORCEMENT_CHECK_ENABLED: false
  EVENTS_CONFIG_ENV_NAMESPACE: qa
  LOCK_CONFIG_ENV_NAMESPACE: qa
  ENV: qa
  EVENTS_CONFIG_CONSUMER_THREADS: 1
  EVENTS_CONFIG_REDIS_SSL_CA_TRUST_STORE_PATH: /opt/harness/svc/redis_labs_ca_truststore
  EVENTS_CONFIG_REDIS_SSL_ENABLED: envSpecific
  EVENTS_CONFIG_REDIS_USERNAME: ""
  EXPORT_METRICS_TO_STACK_DRIVER: true
  FEATURE_FLAG_SYSTEM: CF
  JAVA_ADVANCED_FLAGS:  -XX:NativeMemoryTracking=summary -Xloggc:mygclogfilename.gc -XX:-UseBiasedLocking -XX:+UseG1GC -XX:ErrorFile=/opt/harness/dumps/access-control/<+pipeline.variables.envType>/jfr_dumps/POD_NAME/hs_err_pid%p.log -XX:StartFlightRecording=disk=true,name=jfrRecording,maxage=30m,dumponexit=true,filename=/opt/harness/dumps/access-control/<+pipeline.variables.envType>/jfr_dumps/POD_NAME/,settings=/opt/harness/default.jfc -XX:FlightRecorderOptions=maxchunksize=10M,memorysize=10M,repository=/opt/harness/dumps/access-control/<+pipeline.variables.envType>/jfr_dumps/POD_NAME --add-reads jdk.jfr=ALL-UNNAMED -Dappdynamics.agent.log4j2.disabled=true -Dappdynamics.agent.disable.retransformation=true -Dappdynamics.bciengine.defer.risky.bci=false
  LOCK_CONFIG_REDIS_USERNAME: ""
  LOGGERS: ""
  MAX_STREAM_BATCH_SIZE: 512
  MONGO_MAX_OPERATION_TIME_IN_MILLIS: 30000
  OTEL_EXPORTER_OTLP_ENDPOINT: ""
  OTEL_SERVICE_NAME: accesscontrol-service
  SEGMENT_ENABLED: true
  SYNC_FEATURES_TO_CF: false
  USE_WORKLOAD_IDENTITY: false
  ENABLE_PROMETHEUS_COLLECTOR: true
  PROMETHEUS_COLLECTOR_PORT: 8889
  NAMESPACE: harness
java:
  memory: 512m
## Pod Disruption Budget configuration in HA mode.
## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
##
pdb:
  # --pdb.create Enable/disable a Pod Disruption Budget creation
  ##
  create: true
  # --pdb.minAvailable Minimum number/percentage of pods that must still be available after the eviction
  ##
  minAvailable: 50%
  # --pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable after the eviction
  ##
  maxUnavailable: ""
## image version
## ref: https://hub.docker.com/r/harness/accesscontrol-service-signed/tags
# --image.registry ; image registry
# --image.repository ; image repository
# --image.tag ; image tag (immutable tags are recommended)
# --image.digest ; image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
# --image.pullPolicy Image pull policy
# --image.imagePullSecrets Specify docker-registry secret names as an array
image:
  registry: docker.io
  repository: harness/accesscontrol-service-signed
  pullPolicy: IfNotPresent
  tag: "79802"
  digest: ""
  imagePullSecrets: []
# -- Wait-For-App initContainers details
waitForInitContainer:
  ## image version
  ## ref: https://hub.docker.com/r/harness/helm-init-container/tags
  # --image.registry ; image registry
  # --image.repository ; image repository
  # --image.tag ; image tag (immutable tags are recommended)
  # --image.digest ; image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  # --image.pullPolicy Image pull policy
  # --image.imagePullSecrets Specify docker-registry secret names as an array
  image:
    registry: docker.io
    repository: harness/helm-init-container
    pullPolicy: IfNotPresent
    tag: "latest"
    digest: ""
    imagePullSecrets: []
  resources:
    limits:
      memory: 128Mi
    requests:
      cpu: 128m
      memory: 128Mi
  containerSecurityContext:
    runAsUser: 65534
    runAsNonRoot: true
## -- mongo secrets reference passed to the application
##
mongoSecrets:
  userName:
    name: harness-secrets
    key: mongodbUsername
  password:
    name: mongodb-replicaset-chart
    key: mongodb-root-password

# --nameOverride String to partially override common.names.fullname template (will maintain the release name)
##
nameOverride: ""
# --fullnameOverride String to fully override common.names.fullname template
##
fullnameOverride: ""
## Specifies whether a ServiceAccount should be created
##
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "harness-default"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

containerSecurityContext:
  runAsUser: 65534
  runAsNonRoot: true
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  annotations: {}
  type: ClusterIP
  port: 9006
## Pod resource requests and limits
## ref: https://kubernetes.io/docs/user-guide/compute-resources/
# --resources.limits The resources limits for the containers
# --resources.requests The requested resources for the containers
##
resources:
  limits:
    memory: 8192Mi
  requests:
    cpu: 1
    memory: 712Mi
# --  lifecycleHooks for the container(s) to automate configuration before or after startup
## e.g.
# lifecycleHooks:
#   postStart:
#     exec:
#       command:
#         - /bin/sh
#         - -c
#         - |
#           mkdir -p /opt/harness/dumps/${SERVICE_NAME}/${ENV_TYPE}/jfr_dumps/${POD_NAME};
#           [[ -L /opt/harness/dumps/${SERVICE_NAME}/${ENV_TYPE}/jfr_dumps/POD_NAME ]] && unlink /opt/harness/dumps/${SERVICE_NAME}/${ENV_TYPE}/jfr_dumps/POD_NAME ;
#           ln -s /opt/harness/dumps/${SERVICE_NAME}/${ENV_TYPE}/jfr_dumps/${POD_NAME} /opt/harness/dumps/${SERVICE_NAME}/${ENV_TYPE}/jfr_dumps/POD_NAME ;
#     preStop:
#     exec:
#       command:
#       - /bin/sh
#       - -c
#       - |
#         touch shutdown;
#         sleep 10;
#         ts=$(date '+%s');
#         loc=/opt/harness/dumps/${SERVICE_NAME}/${ENV_TYPE}/$ts/${POD_NAME};
#         mkdir -p $loc; sleep 1; echo $ts > $loc/restart;
#         echo $(date '+%s') > $loc/begin;
#         PID=$(jps|grep -vi jps|awk '{ print $1}');
#         #Copy GC log file
#         cp mygclogfilename.gc $loc/;

#         #Retry 10 times to take thread dump. Unsuccessful attempt has just 1 line with java process id in the output.
#         for ((n=0;n<10;n++)); do
#           jcmd $PID Thread.print -e > $loc/thread-dump-attempt-$n.txt;
#           if [ $(wc -l < $loc/thread-dump-attempt-$n.txt) -gt 1 ]; then break; fi;
#         done

#         #10 retries to take heap histogram. Unsuccessful attempt has just 1 line with java process id in the output.
#         for ((n=0;n<10;n++)); do
#           jcmd $PID GC.class_histogram -all > $loc/heap-histogram-attempt-$n.txt;
#           if [ $(wc -l < $loc/heap-histogram-attempt-$n.txt) -gt 1 ]; then break; fi;
#         done

#         jcmd $PID VM.native_memory  > $loc/native-memory-dump.txt;

#         #Dump latest chunk of JFR recording
#         jcmd $PID JFR.dump name=jfrRecording filename=/opt/harness/dumps/${SERVICE_NAME}/${ENV_TYPE}/jfr_dumps/${POD_NAME}/container_termination_$(date +%Y_%m_%d_%H_%M_%S).jfr > $loc/jfr_done.txt

#         echo $(date '+%s') > $loc/end
#         kill -15
lifecycleHooks: {}

## Autoscaling configuration
# --autoscaling.enabled Enable autoscaling for pods
# --autoscaling.minReplicas Minimum number of replicas
# --autoscaling.maxReplicas Maximum number of replicas
# --autoscaling.targetCPU Target CPU utilization percentage
# --autoscaling.targetMemory Target Memory utilization percentage
##
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPU: ""
  targetMemory: ""

## Configure extra options for liveness probe
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
# -- livenessProbe.enabled Enable livenessProbe
# -- livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
# -- livenessProbe.periodSeconds Period seconds for livenessProbe
# -- livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
# -- livenessProbe.failureThreshold Failure threshold for livenessProbe
# -- livenessProbe.successThreshold Success threshold for livenessProbe
##
livenessProbe:
  enabled: true
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 10
  successThreshold: 1
  failureThreshold:
## Configure extra options for readiness probe
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
# -- readinessProbe.enabled Enable readinessProbe
# -- readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
# -- readinessProbe.periodSeconds Period seconds for readinessProbe
# -- readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
# -- readinessProbe.failureThreshold Failure threshold for readinessProbe
# -- readinessProbe.successThreshold Success threshold for readinessProbe
##
readinessProbe:
  enabled: true
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 10
  successThreshold: 1
  failureThreshold: 10
## Configure extra options for startupProbe probe
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
# -- startupProbe.enabled Enable startupProbe
# -- startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
# -- startupProbe.periodSeconds Period seconds for startupProbe
# -- startupProbe.timeoutSeconds Timeout seconds for startupProbe
# -- startupProbe.failureThreshold Failure threshold for startupProbe
# -- startupProbe.successThreshold Success threshold for startupProbe
##
startupProbe:
  enabled: false
  initialDelaySeconds: 0
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 60
# -- extraEnvVars Extra environment variables to be set on container
## e.g:
## extraEnvVars:
##   - name: FOO
##     value: "bar"
##
extraEnvVars: []
# -- extraEnvVarsCM ConfigMap with extra environment variables
##
extraEnvVarsCM: ""
# -- extraEnvVarsSecret Secret with extra environment variables
##
extraEnvVarsSecret: ""
# --  extraVolumes Optionally specify extra list of additional volumes for ; pods
##
# e.g.
# extraVolumes:
# - name: service-account
#   secret:
#     secretName: redis-ca
#     items:
#     - key: redis-labs-ca-truststore
#       path: redis_labs_ca_truststore
# - name: stackdriver
#   secret:
#     secretName: stackdriver-creds
#     items:
#     - key: stackdriver-key-file
#       path: stackdriver.json
# - name: dumps
#   hostPath:
#     path: /var/dumps
#     type: DirectoryOrCreate
extraVolumes: []
# --  extraVolumeMounts Optionally specify extra list of additional volumeMounts for ; container(s)
##
# e.g.
# extraVolumeMounts:
# - name: service-account
#   mountPath: /opt/harness/svc
# - name: stackdriver
#   mountPath: /opt/harness/monitoring
# - name: dumps
#   mountPath: /opt/harness/dumps
extraVolumeMounts: []
# --initContainers Add additional init containers to the ; pods
## e.g:
## initContainers:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
initContainers: []
# --sidecars Add additional sidecar containers to the ; pods
## e.g:
## sidecars:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
sidecars: []
# --  affinity Affinity for pod assignment. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## Note: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
##
affinity: {}
# --  nodeSelector Node labels for pod assignment. Evaluated as a template.
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}
# --  tolerations Tolerations for pod assignment. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

mongoSSL:
  enabled: false

# -- additionalConfigs Additional configurations for the deployment
additionalConfigs: {}
java17flags: ""

virtualService:
  annotations: {}
ingress:
  annotations: {}

secrets:
  default:
    IDENTITY_SERVICE_SECRET: "HVSKUYqD4e5Rxu12hFDdCJKGM64sxgEynvdDhaOHaTHhwwn0K4Ttr0uoOxSsEVYNrUU="
    CF_CLIENT_API_KEY: ""
    ACCESS_CONTROL_CLIENT_SERVICE_SECRET: ""
    ACCESS_CONTROL_SERVICE_SECRET: ""
    ACCOUNT_SERVICE_SECRET: ""
    APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY: ""
    DEFAULT_SERVICE_SECRET: ""
    EVENTS_CONFIG_REDIS_PASSWORD: ""
    FEATURE_FLAG_CLIENT_SECRET: ""
    JWT_AUTH_SECRET: ""
    LOCK_CONFIG_REDIS_PASSWORD: ""
    ORGANIZATION_CLIENT_SERVICE_SECRET: ""
    PROJECT_CLIENT_SERVICE_SECRET: ""
    RESOURCE_GROUP_CLIENT_SERVICE_SECRET: ""
    SEGMENT_APIKEY: ""
    SERVICEACCOUNT_CLIENT_SERVICE_SECRET: ""
    USER_CLIENT_SERVICE_SECRET: ""
    USER_GROUP_CLIENT_SERVICE_SECRET: ""
    CF_CLIENT_API_KEY: ""
    EVENTS_CONFIG_REDIS_SSL_CA_TRUST_STORE_PASSWORD: ""
  kubernetesSecrets:
    - secretName: ""
      keys:
        IDENTITY_SERVICE_SECRET: ""
        CF_CLIENT_API_KEY: ""
        ACCESS_CONTROL_CLIENT_SERVICE_SECRET: ""
        ACCESS_CONTROL_SERVICE_SECRET: ""
        ACCOUNT_SERVICE_SECRET: ""
        APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY: ""
        DEFAULT_SERVICE_SECRET: ""
        EVENTS_CONFIG_REDIS_PASSWORD: ""
        FEATURE_FLAG_CLIENT_SECRET: ""
        JWT_AUTH_SECRET: ""
        LOCK_CONFIG_REDIS_PASSWORD: ""
        ORGANIZATION_CLIENT_SERVICE_SECRET: ""
        PROJECT_CLIENT_SERVICE_SECRET: ""
        RESOURCE_GROUP_CLIENT_SERVICE_SECRET: ""
        SEGMENT_APIKEY: ""
        SERVICEACCOUNT_CLIENT_SERVICE_SECRET: ""
        USER_CLIENT_SERVICE_SECRET: ""
        USER_GROUP_CLIENT_SERVICE_SECRET: ""
        EVENTS_CONFIG_REDIS_SSL_CA_TRUST_STORE_PASSWORD: ""
  secretManagement:
    externalSecretsOperator:
      - secretStore:
          name: ""
          kind: ""
        remoteKeys:
          IDENTITY_SERVICE_SECRET:
            name: ""
            property: ""
          CF_CLIENT_API_KEY:
            name: ""
            property: ""
          ACCESS_CONTROL_CLIENT_SERVICE_SECRET:
            name: ""
            property: ""
          ACCESS_CONTROL_SERVICE_SECRET:
            name: ""
            property: ""
          ACCOUNT_SERVICE_SECRET:
            name: ""
            property: ""
          APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY:
            name: ""
            property: ""
          DEFAULT_SERVICE_SECRET:
            name: ""
            property: ""
          EVENTS_CONFIG_REDIS_PASSWORD:
            name: ""
            property: ""
          FEATURE_FLAG_CLIENT_SECRET:
            name: ""
            property: ""
          JWT_AUTH_SECRET:
            name: ""
            property: ""
          LOCK_CONFIG_REDIS_PASSWORD:
            name: ""
            property: ""
          ORGANIZATION_CLIENT_SERVICE_SECRET:
            name: ""
            property: ""
          PROJECT_CLIENT_SERVICE_SECRET:
            name: ""
            property: ""
          RESOURCE_GROUP_CLIENT_SERVICE_SECRET:
            name: ""
            property: ""
          SEGMENT_APIKEY:
            name: ""
            property: ""
          SERVICEACCOUNT_CLIENT_SERVICE_SECRET:
            name: ""
            property: ""
          USER_CLIENT_SERVICE_SECRET:
            name: ""
            property: ""
          USER_GROUP_CLIENT_SERVICE_SECRET:
            name: ""
            property: ""
          EVENTS_CONFIG_REDIS_SSL_CA_TRUST_STORE_PASSWORD:
            name: ""
            property: ""
