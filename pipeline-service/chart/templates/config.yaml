apiVersion: v1
kind: ConfigMap
metadata:
  name: pipeline-service
  namespace: {{ .Release.Namespace }}
  labels:
    {{- if .Values.global.commonLabels }}
    {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.global.commonAnnotations }}
  annotations: {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
data:
  {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.configData "context" $) | nindent 2}}
  CACHE_CONFIG_REDIS_SENTINELS: {{ include "harnesscommon.dbconnectionv2.redisConnection" (dict "context" $) }}
  CACHE_CONFIG_USE_SENTINEL: {{ .Values.global.database.redis.installed | quote }}
  CACHE_CONFIG_REDIS_URL: {{ include "harnesscommon.dbconnectionv2.redisConnection" (dict "context" $) }}
  LOGGING_LEVEL: {{ .Values.appLogLevel }}
  LOCK_CONFIG_REDIS_SENTINELS: {{ include "harnesscommon.dbconnectionv2.redisConnection" (dict "context" $) }}
  LOCK_CONFIG_USE_SENTINEL: {{ .Values.global.database.redis.installed | quote }}
  LOCK_CONFIG_REDIS_URL: {{ include "harnesscommon.dbconnectionv2.redisConnection" (dict "context" $) }}
  STACK_DRIVER_LOGGING_ENABLED: {{ .Values.global.stackDriverLoggingEnabled | quote }}
  MEMORY: {{ .Values.java.memory | quote }}
  EVENTS_FRAMEWORK_REDIS_URL: {{ include "harnesscommon.dbconnectionv2.redisConnection" (dict "context" $) }}
  EVENTS_FRAMEWORK_USE_SENTINEL: {{ .Values.global.database.redis.installed | quote }}
  EVENTS_FRAMEWORK_REDIS_SENTINELS: {{ include "harnesscommon.dbconnectionv2.redisConnection" (dict "context" $) }}
  PIPELINE_SERVICE_BASE_URL: '{{ .Values.global.loadbalancerURL }}/ng/#'
  PMS_API_BASE_URL: '{{ .Values.global.loadbalancerURL }}/gateway/pipeline/api/'
  LOG_STREAMING_SERVICE_BASEURL: 'http://log-service.{{ .Release.Namespace }}.svc.cluster.local:8079/'
  WEBHOOK_TRIGGER_BASEURL: '{{ .Values.global.loadbalancerURL }}/ng/api/'
  CUSTOM_TRIGGER_BASEURL: '{{ .Values.global.loadbalancerURL }}/gateway/pipeline/api/'
  {{- if .Values.global.opa.enabled }}
  OPA_SERVER_BASEURL: 'http://policy-mgmt.{{ .Release.Namespace }}.svc.cluster.local:3000/'
  {{- end }}
  DISABLE_FREEZE_NOTIFY_TEMPLATE: '{{ .Values.global.disableFreezeNotifyTemplate }}'
  LOG_STREAMING_CONTAINER_STEP_BASE_URL: '{{ .Values.global.loadbalancerURL }}/log-service/'
  ALLOWED_ORIGINS: '{{ .Values.allowedOrigins | default .Values.global.loadbalancerURL }}'
  {{- if .Values.global.ssca.enabled }}
  SSCA_SERVICE_ENDPOINT: '{{ .Values.global.loadbalancerURL }}/ssca-manager/'
  SSCA_ORCHESTRATION_IMAGE: '{{ .Values.ssca_images.ssca_plugin.image.repository }}:{{ .Values.ssca_images.ssca_plugin.image.tag }}'
  SSCA_ENFORCEMENT_IMAGE: '{{ .Values.ssca_images.ssca_plugin.image.repository }}:{{ .Values.ssca_images.ssca_plugin.image.tag }}'
  {{- end }}
  {{ include "harnesscommon.harnessfunctions.java17flags" (dict "context" $) | nindent 2 }}
  {{- if .Values.additionalConfigs }}
  {{- toYaml .Values.additionalConfigs | nindent 2 }}
  {{- end }}
  {{- include "harnesscommon.monitoring.config" . | nindent 2 }}
