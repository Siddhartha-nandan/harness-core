topk(3, sum by (app, proc) (rate(instance_cpu_time_ns[5m])))
topk(3, sum (sum by(node,app, proc)(rate(instance_cpu_time_ns[5m]))) by (node)) by (node)
count by (app) (instance_cpu_time_ns)
count (count by(node,app)(instance_cpu_time_ns)) by (node)
sum by(pod)(rate(nginx_event_count{service="eventserver",response_status="404",cluster="<+monitoredService.variables.cluster>"}[5m]))
sum (sum by(node,pod)(rate(nginx_event_count{service="eventserver",response_status="404",cluster="<+monitoredService.variables.cluster>"}[5m]))) by (node)
sum(container_memory_usage_bytes{source_cluster="hs-eks-dev-api-aps1",pod=~"harness-dummy-.*", container!="POD", container!=""}) by (le)
sum(sum(container_memory_usage_bytes{source_cluster="hs-eks-dev-api-aps1",pod=~"harness-dummy-.*", container!="POD", container!=""})by(node,le)) by (node)
avg(repo_load_last_success_time{service="bifrost",cluster="<+monitoredService.variables.cluster>"}) / avg(repo_load_last_success_time{service="bifrost",cluster="<+monitoredService.variables.cluster>"})
avg(repo_load_last_success_time{service="bifrost",cluster="<+monitoredService.variables.cluster>"}) by (node) / avg(repo_load_last_success_time{service="bifrost",cluster="<+monitoredService.variables.cluster>"}) by (node)
time () - avg(repo_load_last_success_time{service = "bifrost", cluster = "<+monitoredService.variables.cluster>"})/1000
time () - avg(repo_load_last_success_time{service = "bifrost", cluster = "<+monitoredService.variables.cluster>"}) by (node)/1000
sum(rate(publish_count_total{success="true",cluster = "<+monitoredService.variables.cluster>"}[5m]))by(abc)
sum(sum(rate(publish_count_total{success="true",cluster = "<+monitoredService.variables.cluster>"}[5m]))by(node,abc)) by (node)
sum(rate(bifrost_nginx_valid_event_count{response_status="200",service="bifrost",cluster="<+monitoredService.variables.cluster>"}[5m]))
sum(rate(bifrost_nginx_valid_event_count{response_status="200",service="bifrost",cluster="<+monitoredService.variables.cluster>"}[5m])) by (node)
time () - (avg(repo_load_last_success_time{service = "bifrost", cluster = "<+monitoredService.variables.cluster>"}))/1000
time () - (avg(repo_load_last_success_time{service = "bifrost", cluster = "<+monitoredService.variables.cluster>"}) by (node))/1000
sum(rate(flume_sink_stats{stat_name="EventDrainSuccessCount", service = "bifrost", cluster = "<+monitoredService.variables.cluster>"}[5m]))
sum(rate(flume_sink_stats{stat_name="EventDrainSuccessCount", service = "bifrost", cluster = "<+monitoredService.variables.cluster>"}[5m])) by (node)
sum((container_memory_usage_bytes{container!="POD",container!=""} - on (namespace,pod,container) avg by (namespace,pod,container)(kube_pod_container_resource_requests{resource="memory"})) * -1 >0 ) / (1024*1024*1024)
sum((container_memory_usage_bytes{container!="POD",container!=""} - on (namespace,pod,container) avg (avg by(node,namespace,pod,container)(kube_pod_container_resource_requests{resource="memory"})) by (node)) * -1 >0 ) / (1024*1024*1024)
sum((rate(container_cpu_usage_seconds_total{container!="POD",container!=""}[30m]) - on (namespace,pod,container) group_left avg by (namespace,pod,container)(kube_pod_container_resource_requests{resource="cpu"})) * -1 >0)
sum((rate(container_cpu_usage_seconds_total{container!="POD",container!=""}[30m]) - on (namespace,pod,container) group_left avg (avg by(node,namespace,pod,container)(kube_pod_container_resource_requests{resource="cpu"})) by (node)) * -1 >0)
sum(kube_node_status_condition{condition="Ready", status="true"}==1)
sum(kube_node_status_condition{condition="Ready", status="true"}==1) by (node)
sum(kube_pod_container_resource_limits{resource="memory"}) - sum(kube_node_status_capacity_memory_bytes)
sum(kube_pod_container_resource_limits{resource="memory"}) by (node) - sum(kube_node_status_capacity_memory_bytes) by (node)
sum by (namespace)(changes(kube_pod_status_ready{condition="true"}[5m]))
sum (sum by(node,namespace)(changes(kube_pod_status_ready{condition="true"}[5m]))) by (node)
count by (namespace)( sum by (namespace,pod,container)(kube_pod_container_info{container!=""}) unless sum by (namespace,pod,container)(kube_pod_container_resource_limits{resource="cpu"}))
count (count by(node,namespace)( sum (sum by(node,namespace,pod,container)(kube_pod_container_info{container!=""})) by (node) unless sum (sum by(node,namespace,pod,container)(kube_pod_container_resource_limits{resource="cpu"})) by (node))) by (node)
sum( ((rate((postspo_noFill_latency_seconds_count{container="dsp-serving",cluster=~"<+monitoredService.variables.cluster>"}[5m])))) )
sum(rate(postspo_noFill_latency_seconds_count{container="dsp-serving",cluster=~"<+monitoredService.variables.cluster>"}[5m])) by (node)
