Var timeSeriesUrl = concat(Env:baseUrl, "v2/query/timeseries")

Var requests = []
Var nullObject = null
Var one = 1
Var zero = 0
Var thousand = 1000
Var requestIndex = 0

foreach formula in Env:formulaList {
    print Var:formula
    Var params = {}
    Var requestBody = {}
    Var data = {}
    Var:requestBody.put("data", Var:data)
    Var attributes = {}

    Var:data.put("type", "timeseries_request")
    Var:data.put("attributes", Var:attributes)

    Var:attributes.put("from", Env:startTimeMillis)
    Var:attributes.put("to", Env:endTimeMillis)
    Var:attributes.put("interval", Var:thousand)

    Var formulaQueries =  Env:formulaQueriesList[Var:requestIndex]
    Var charIdx = 1
    Var formulaQueriesObj = []
    foreach formulaQuery in Var:formulaQueries{
    Var queryObj = {}
    Var:queryObj.put("data_source", "metrics")
    Var:queryObj.put("query", Var:formulaQuery)
    Var finalName = concat("query", Var:charIdx)
    Var:queryObj.put("name", Var:finalName)
    Var:formulaQueriesObj.append(Var:queryObj)
    charIdx = Var:charIdx + Var:one
    }
    Var:attributes.put("queries", Var:formulaQueriesObj)

    Var formulas = []
    Var formulaObj = {}
    Var:formulaObj.put("formula", Var:formula)
    Var:formulas.append(Var:formulaObj)
    Var:attributes.put("formulas", Var:formulas)
    print Var:requestBody
    Request metricRequest = new Request(url=Var:timeSeriesUrl, header=Env:commonHeaders, options=Var:params, body=Var:requestBody)
    Var:requests.append(Var:metricRequest)
    requestIndex = Var:requestIndex + Var:one
   }

Var metricResponses = execute-parallel(Var:requests)
Var returnList = []

Var index = 0
foreach metricResponse in Var:metricResponses {
  Var groupByArray = extract(Var:metricResponse, $.data.attributes)
  Var metricIdentifier = Env:metricIdentifiers[Var:index]
  Var hostTimeSeriesPointsList = extract(Var:groupByArray, $.series)
  Var timeSeries = extract(Var:groupByArray, $.times)
  Var timeSeriesValues = extract(Var:groupByArray, $.values)
  Var hostIdx = 0
  Var host = null
  foreach hostTimeSeriesPoints in Var:hostTimeSeriesPointsList {
     if Env:collectHostData == "true" {
     Var serviceInstanceIdentifier = Env:serviceInstanceIdentifierTagList[Var:index]
     Var tagSets = extract(Var:hostTimeSeriesPoints, $.group_tags)
     Var tagSetsLen = Var:tagSets.length()
     if Var:tagSetsLen != Var:zero {
     foreach tag in Var:tagSets {
     Var tagSplitResult = Var:tag.split(":")
     Var tagKey = Var:tagSplitResult[0]
     if Var:tagKey == Var:serviceInstanceIdentifier {
       host = Var:tagSplitResult[1]
         }
       }
     }
     }

     Var points = Var:timeSeriesValues[Var:hostIdx]
     Var timeIdx = 0
     foreach point in Var:points {
        Var timestamp = Var:timeSeries[Var:timeIdx]
        if Var:point != Var:nullObject {
           Var tsRecord = new TimeseriesRecord(txnName=Env:groupName, metricIdentifier=Var:metricIdentifier, metricName=Var:metricIdentifier, metricValue=Var:point, timestamp=Var:timestamp, host=Var:host)
             Var:returnList.append(Var:tsRecord)
           }
           timeIdx = Var:timeIdx + Var:one
        }
        hostIdx = Var:hostIdx + Var:one
  }
  index = Var:index + Var:one
}

return Var:returnList