apiVersion: v1
kind: ConfigMap
metadata:
  name: harness-manager-config
  namespace: '{{ .Release.Namespace }}'
  {{- if .Values.global.commonLabels }}
  labels:
    {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonLabels "context" $ ) | nindent 4 }}
  {{- end }}
  {{- if .Values.global.commonAnnotations }}
  annotations: 
    {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
data:
  {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.configData "context" $) | nindent 2}}
  {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.configData "context" $) | nindent 2}}
  ALLOWED_ORIGINS: '{{ .Values.allowedOrigins | default .Values.global.loadbalancerURL }}'
  API_URL: '{{  .Values.global.loadbalancerURL }}'
  DELEGATE_METADATA_URL: '{{  .Values.global.loadbalancerURL }}/storage/wingsdelegates/delegateprod.txt'
  UI_SERVER_URL: '{{  .Values.global.loadbalancerURL }}'
  WATCHER_METADATA_URL: '{{  .Values.global.loadbalancerURL }}/storage/wingswatchers/watcherprod.txt'
  LOG_STREAMING_SERVICE_BASEURL: 'http://log-service.{{ .Release.Namespace }}.svc.cluster.local:8079/'
  LOG_STREAMING_SERVICE_EXTERNAL_URL: '{{ .Values.global.loadbalancerURL }}/log-service/'
  DELEGATE_DOCKER_IMAGE: {{ include "harness-manager.delegate_docker_image" . }}
  IMMUTABLE_DELEGATE_ENABLED: '{{ .Values.global.useImmutableDelegate }}'
  IMMUTABLE_DELEGATE_DOCKER_IMAGE: {{ include "harness-manager.immutable_delegate_docker_image" . }}
  UPGRADER_DOCKER_IMAGE: {{ include "harness-manager.upgrader_docker_image" . }}
  EXTERNAL_GRAPHQL_RATE_LIMIT: '{{ .Values.external_graphql_rate_limit }}'
  FEATURES: {{ include "harness-manager.ffString" . | quote }}
  HAZELCAST_NAMESPACE: '{{ .Release.Namespace }}'
  LOGGING_LEVEL: '{{ .Values.appLogLevel }}'
  MEMORY: '{{ .Values.java.memory }}'
  REDIS_SENTINEL: '{{ .Values.global.database.redis.installed }}'
  REDIS_URL: {{ include "harnesscommon.dbconnectionv2.redisConnection" (dict "context" $) }}
  REDIS_SENTINELS: {{ include "harnesscommon.dbconnectionv2.redisConnection" (dict "context" $) }}
  REDIS_NETTY_THREADS: '{{ .Values.redisConfig.nettyThreads }}'
  VERSION: '{{ .Values.version }}'
  STACK_DRIVER_LOGGING_ENABLED: '{{ .Values.global.stackDriverLoggingEnabled }}'
  EVENTS_FRAMEWORK_REDIS_SENTINELS: {{ include "harnesscommon.dbconnectionv2.redisConnection" (dict "context" $) }}
  EVENTS_FRAMEWORK_USE_SENTINEL: '{{ .Values.global.database.redis.installed }}'
  EVENTS_FRAMEWORK_REDIS_URL: {{ include "harnesscommon.dbconnectionv2.redisConnection" (dict "context" $) }}
  {{- if .Values.global.mongoSSL }}
  {{- end }}
  {{- if .Values.global.proxy.enabled }}
  PROXY_ENABLED: '{{ .Values.global.proxy.enabled }}'
  PROXY_HOST: {{ .Values.global.proxy.host }}
  PROXY_PORT: '{{ .Values.global.proxy.port }}'
  PROXY_USERNAME: '{{ .Values.global.proxy.username }}'
  PROXY_PASSWORD: '{{ .Values.global.proxy.password }}'
  PROXY_PROTOCOL: {{ .Values.global.proxy.protocol }}
  {{- end }}
  {{- if .Values.global.awsServiceEndpointUrls.enabled }}
  AWS_SERVICE_ENDPOINT_URLS_ENABLED: '{{ .Values.global.awsServiceEndpointUrls.enabled }}'
  AWS_SERVICE_ENDPOINT_URLS_ENDPOINT_REGION: {{ .Values.global.awsServiceEndpointUrls.endPointRegion }}
  AWS_SERVICE_ENDPOINT_URLS_STS_ENDPOINT_URL: {{ .Values.global.awsServiceEndpointUrls.stsEndPointUrl }}
  AWS_SERVICE_ENDPOINT_URLS_ECS_ENDPOINT_URL: {{ .Values.global.awsServiceEndpointUrls.ecsEndPointUrl }}
  AWS_SERVICE_ENDPOINT_URLS_CLOUDWATCH_ENDPOINT_URL: {{ .Values.global.awsServiceEndpointUrls.cloudwatchEndPointUrl }}
  {{- end }}
  {{- if .Values.global.ng.enabled }}
  {{- end }}
  {{ include "harnesscommon.harnessfunctions.java17flags" (dict "context" $) | nindent 2 }}
  {{- if .Values.additionalConfigs }}
  {{- toYaml .Values.additionalConfigs | nindent 2 }}
  {{- end }}
  {{- include "harnesscommon.monitoring.config" . | nindent 2 }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: iterator-config
  {{- if .Values.global.commonLabels }}
  labels:
    {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonLabels "context" $ ) | nindent 4 }}
  {{- end }}
  {{- if .Values.global.commonAnnotations }}
  annotations: {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.global.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
data:
  {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.configData2 "context" $) | nindent 2}}
  {{- include "harnesscommon.tplvalues.render" ( dict "value" .Values.configData2 "context" $) | nindent 2}}
  iterator_config.json: |
    [
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      },
      {
      }
    ]
