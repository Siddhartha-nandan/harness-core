# --
global:
  database:
    minio:
      installed: true
    mongo:
      installed: true
    postgres:
      installed: true
    timescaledb:
      installed: true
    redis:
      installed: true
  ingress:
    enabled: false
    loadBalancerIP: '0.0.0.0'
    loadBalancerEnabled: false
    className: "harness"
    hosts:
      - 'myhost.example.com'
    tls:
      enabled: true
      secretName: harness-cert
  # -- Istio Ingress Settings
  istio:
    enabled: false
    strict: false
    gateway:
      # -- Enable to create istio-system gateway
      create: true
      port: 443
      # -- override the name of gateway
      name: ""
      # -- override the name of namespace to deploy gateway
      namespace: ""
      # -- adds a gateway selector
      selector:
        istio: ingressgateway
      protocol: HTTPS
    # -- set to istio gateway's k8s service FQDN for internal use case. eg "internal-istio-gateway.istio-system.svc.cluster.local"
    # If not set, internal request routing would happen via global.loadbalancerUrl
    istioGatewayServiceUrl: ""
    # -- add global.istio.istioGatewayServiceUrl in hosts if global.istio.istioGatewayServiceUrl is not empty.
    hosts:
      - '*'
    tls:
      credentialName:
      minProtocolVersion: TLSV1_2
      mode: SIMPLE
    virtualService:
      gateways:
        - ""
      # -- add global.istio.istioGatewayServiceUrl in hosts if global.istio.istioGatewayServiceUrl is not empty.
      hosts:
harness-secrets:
  enabled: true
image:
  registry: us.gcr.io
  repository: platform-205701/bootstrap
  tag: "null"
