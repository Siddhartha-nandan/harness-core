// Copyright 2022 Harness Inc. All rights reserved.
// Use of this source code is governed by the PolyForm Free Trial 1.0.0 license
// that can be found in the licenses directory at the root of this repository, also available at
// https://polyformproject.org/wp-content/uploads/2020/05/PolyForm-Free-Trial-1.0.0.txt.

syntax = "proto3";

package io.harness.delegate.core.beans;

import "955-delegate-beans/src/main/proto/io/harness/delegate/core/beans/plugin.proto";

option java_multiple_files = true;

/*
  Top level request object for acquiring tasks
 */
message AcquireTasksResponse {
  string executionInfraId = 1;  // Id for the entire transaction
  // There will be only one payload per request at current stage of implementation.
  // But it's always good to keep API definition plural for future extensibility.
  repeated TaskPayload task = 2;
}

/*
 All data that is needed to execute the job
 */
message TaskPayload {
  string id = 1;  // Id for the request.

  // specifies the resource and method delegate will take actions about
  // With new architecture, we will bring 3 concepts as first class in delegate
  // 1. set up an execution infrastructure 2. executing steps 3. clean up execution infrastructure
  // When delegate acquires a RequestPayload, based on the resourceUri and resourceMethod it will invoke corresponding
  // handler to process the payload.
  // For example, when delegate receives POST /executioninfrastructure/{runnerType},
  // delegate will invoke the handler of creating an execution infra.
  // When delegate receives POST /execution/{runnerType},
  // delegate will invoke the handler of executing a task, in which it will call the corresponding runner's API to
  // execute the task.
  string resourceUri = 2;
  string resourceMethod = 3;
  string log_token =
      6;  // Token for log stream. It's not in the payload data because log token is assigned when acquire
  InputData task_data = 7;   // binary data for task inputs.
  InputData infra_data = 8;  // binary data for infra config
  // TODO: secrets + decryptableEntities
}