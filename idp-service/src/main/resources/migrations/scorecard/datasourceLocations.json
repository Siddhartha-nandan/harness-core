[
  {
    "id": "64d4f2792a05b207f0ee598f",
    "accountIdentifier": "__GLOBAL_ACCOUNT_ID__",
    "identifier": "github_mean_time_to_merge_pr",
    "dataSourceIdentifier": "github",
    "type": "DirectHttp",
    "apiRequestDetails": {
      "method": "POST",
      "url": "https://api.github.com/graphql",
      "headers": {
        "Content-Type": "application/json",
        "Authorization": "{BEARER_AUTH}"
      },
      "requestBody": "{\"query\":\"query {\\n    repository(owner: \\\"{REPOSITORY_OWNER}\\\", name: \\\"{REPOSITORY_NAME}\\\") {\\n    pullRequests(states: MERGED, last: 100{REPOSITORY_BRANCH_NAME_REPLACER}) {\\n      edges {\\n        node {\\n          number\\n          createdAt\\n          mergedAt\\n        }\\n      }\\n    }\\n  }\\n}\",\"variables\":{}}"
    }
  },
  {
    "id": "64d5c5ed0646ac1d149d0da2",
    "accountIdentifier": "__GLOBAL_ACCOUNT_ID__",
    "identifier": "catalog",
    "dataSourceIdentifier": "catalog",
    "type": "Noop"
  },
  {
    "id": "64d5f2f51bf2020f1cc713bd",
    "accountIdentifier": "__GLOBAL_ACCOUNT_ID__",
    "identifier": "github_is_branch_protection_set",
    "dataSourceIdentifier": "github",
    "type": "DirectHttp",
    "apiRequestDetails": {
      "method": "POST",
      "url": "https://api.github.com/graphql",
      "headers": {
        "Content-Type": "application/json",
        "Authorization": "{BEARER_AUTH}"
      },
      "requestBody": "{\"query\":\"query {\\n    repository(owner: \\\"{REPOSITORY_OWNER}\\\", name: \\\"{REPOSITORY_NAME}\\\") {\\n    {REPOSITORY_BRANCH_NAME_REPLACER}{\\n      name\\n      branchProtectionRule{\\n          allowsDeletions\\n          allowsForcePushes\\n      }\\n    }\\n  }\\n}\",\"variables\":{}}"
    }
  },
  {
    "id": "64edb326148f531a384f0107",
    "accountIdentifier": "__GLOBAL_ACCOUNT_ID__",
    "identifier": "github_is_file_exists",
    "dataSourceIdentifier": "github",
    "type": "DirectHttp",
    "apiRequestDetails": {
      "method": "POST",
      "url": "https://api.github.com/graphql",
      "headers": {
        "Content-Type": "application/json",
        "Authorization": "{BEARER_AUTH}"
      },
      "requestBody": "{\"query\":\"query {\\n  repository(owner: \\\"{REPOSITORY_OWNER}\\\", name: \\\"{REPOSITORY_NAME}\\\") {\\n    defaultBranchRef {\\n      repository {\\n        object(expression : \\\"{FILE_EXISTS_REPLACER}\\\") {\\n          ... on Tree {\\n            id\\n            entries {\\n              name\\n              path\\n              type\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\",\"variables\":{}}"
    }
  }
]