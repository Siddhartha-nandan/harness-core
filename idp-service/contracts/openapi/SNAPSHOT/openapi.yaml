openapi: 3.0.3
x-stoplight:
  id: cw2rng7ei2wad
info:
  title: idp-3-0-3
  version: '1.0'
  description: Harness Internal Developer Portal API Reference
servers:
  - url: 'https://api.harness.io'
paths:
  /v1/secret:
    get:
      summary: GetSecrets
      responses:
        '200':
          $ref: '#/components/responses/SecretResponseList'
      operationId: get-secrets
      description: Get all secret for a given account
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Sort'
      requestBody:
        $ref: '#/components/requestBodies/SecretRequest'
      security:
        - x-api-key: []
      tags:
        - SecretManager
    post:
      summary: CreateSecret
      operationId: create-secret
      responses:
        '201':
          $ref: '#/components/responses/SecretResponse'
      description: Creates a secret
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      security:
        - x-api-key: []
      requestBody:
        $ref: '#/components/requestBodies/SecretRequest'
      tags:
        - SecretManager
    parameters: []
  '/v1/secret/{secret}':
    parameters:
      - schema:
          type: string
        name: secret
        in: path
        required: true
    get:
      summary: GetSecret
      responses:
        '200':
          $ref: '#/components/responses/SecretResponse'
      operationId: get-secret
      description: Get secret for a given secret name
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      tags:
        - SecretManager
    put:
      summary: UpdateSecret
      operationId: update-secret
      responses:
        '200':
          $ref: '#/components/responses/SecretResponse'
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      requestBody:
        $ref: '#/components/requestBodies/SecretRequest'
      description: Updates the specified secret
      tags:
        - SecretManager
    delete:
      summary: DeleteSecret
      operationId: delete-secret
      responses:
        '200':
          $ref: '#/components/responses/SecretResponse'
      description: Deletes the requested secret
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      tags:
        - SecretManager
components:
  schemas:
    Secret:
      title: Secret
      x-stoplight:
        id: 1avd7teg9jznm
      type: object
      properties:
        name:
          type: string
        secretIdentifier:
          type: string
        description:
          type: string
        account:
          type: string
    SecretRequest:
      title: SecretRequest
      x-stoplight:
        id: 0q9h14r875kg2
      type: object
      properties:
        secret:
          $ref: '#/components/schemas/Secret'
    SecretResponse:
      title: SecretResponse
      x-stoplight:
        id: a3p63xmqmdp42
      type: object
      properties:
        secret:
          $ref: '#/components/schemas/Secret'
        created:
          type: integer
          format: int64
        updated:
          type: integer
          format: int64
  parameters:
    AccountHeader:
      name: Harness-Account
      in: header
      required: false
      schema:
        type: string
      description: 'Identifier field of the account the resource is scoped to. This is required for Authorization methods other than the x-api-key header. If you are using the x-api-key header, this can be skipped.'
    Limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
      description: 'Pagination: Number of items to return'
    Page:
      name: page
      in: query
      required: false
      schema:
        type: integer
      description: "Pagination page number strategy: Specify the page number within the paginated collection related to the number of items in each page\t"
    Sort:
      name: sort
      in: query
      required: false
      schema:
        type: string
      description: Parameter on the basis of which sorting is done.
    SecretPathParam:
      name: secret
      in: path
      required: true
      schema:
        type: string
      description: Identifier field of the secret the resource is scoped to
  requestBodies:
    SecretRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecretRequest'
  responses:
    SecretResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecretResponse'
    SecretResponseList:
      description: Example response
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SecretResponse'
      headers:
        X-Total-Elements:
          schema:
            type: integer
          description: Total number of elements returned in Paginated response.
        X-Page-Number:
          schema:
            type: integer
          description: Page number in Paginated response.
        X-Page-Size:
          schema:
            type: integer
          description: Maximum page size in Paginated response.
  securitySchemes:
    x-api-key:
      name: x-api-key
      type: apiKey
      in: header
