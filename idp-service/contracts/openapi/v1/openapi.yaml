openapi: 3.0.3
x-stoplight:
  id: bzzh06ys7nti1
info:
  title: IDP
  version: '1.0'
  description: Harness Internal Developer Portal API Reference
  contact:
    name: API Support
    email: contact@harness.io
    url: 'https://harness.io/'
servers:
  - url: 'https://api.harness.io'
paths:
  /v1/environment-secrets:
    get:
      summary: Retrieves all Environment Secrets
      responses:
        '200':
          $ref: '#/components/responses/EnvironmentSecretResponseList'
      operationId: get-environment-secrets
      description: Get all environment secrets mapping for a given account
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Sort'
      requestBody:
        $ref: '#/components/requestBodies/EnvironmentSecretRequest'
      security:
        - x-api-key: []
      x-internal: true
      tags:
        - EnvironmentSecret
    post:
      summary: Creates an Environment Secret
      operationId: create-environment-secret
      responses:
        '201':
          $ref: '#/components/responses/EnvironmentSecretResponse'
      description: Creates an environment secret
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      security:
        - x-api-key: []
      requestBody:
        $ref: '#/components/requestBodies/EnvironmentSecretRequest'
      tags:
        - EnvironmentSecret
      x-internal: true
    parameters: []
  '/v1/environment-secrets/{environment-secret}':
    parameters:
      - $ref: '#/components/parameters/EnvironmentSecret'
    get:
      summary: Retrieves an Environment Secret
      responses:
        '200':
          $ref: '#/components/responses/EnvironmentSecretResponse'
      operationId: get-environment-secret
      description: Get environment secret mapping for a given environment secret
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      x-internal: true
      tags:
        - EnvironmentSecret
    put:
      summary: Updates an Environment Secret
      operationId: update-environment-secret
      responses:
        '200':
          $ref: '#/components/responses/EnvironmentSecretResponse'
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      requestBody:
        $ref: '#/components/requestBodies/EnvironmentSecretRequest'
      description: Updates the specified environment secret
      tags:
        - EnvironmentSecret
      x-internal: true
    delete:
      summary: Deletes an Environment Secret
      operationId: delete-environment-secret
      description: Deletes the requested environment secret
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      tags:
        - EnvironmentSecret
      x-internal: true
      responses:
        '204':
          description: No Content
  /v1/environment-secrets/batch:
    post:
      summary: Creates Multiple Environment Secret
      operationId: create-environment-secrets
      responses:
        '201':
          $ref: '#/components/responses/EnvironmentSecretResponseList'
      description: Creates multiple environment secret
      x-internal: true
      requestBody:
        $ref: '#/components/requestBodies/EnvironmentSecretRequestList'
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      security:
        - x-api-key: []
      tags:
        - EnvironmentSecret
    put:
      summary: Updates Multiple Environment Secret
      operationId: update-environment-secrets
      responses:
        '200':
          $ref: '#/components/responses/EnvironmentSecretResponseList'
      description: Updates the multiple environment secrets specified in the request
      x-internal: true
      security:
        - x-api-key: []
      requestBody:
        $ref: '#/components/requestBodies/EnvironmentSecretRequestList'
      tags:
        - EnvironmentSecret
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
    delete:
      summary: Deletes Multiple Environment Secret
      operationId: delete-environment-secrets
      responses:
        '204':
          description: No Content
      description: Deletes the multiple environment secrets specified in the request
      x-internal: true
      security:
        - x-api-key: []
      parameters:
        - schema:
            type: array
            items:
              type: string
          in: query
          name: environment-secret
          description: Identifier field of environment secrets
        - $ref: '#/components/parameters/AccountHeader'
      tags:
        - EnvironmentSecret
  /v1/backstage-permissions:
    get:
      summary: Gets all backstage permissions
      responses:
        '200':
          $ref: '#/components/responses/BackstagePermissionsResponse'
      operationId: get-backstage-permissions
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      description: Get all backstage permissions for a given account
      security:
        - x-api-key: []
      x-internal: true
      tags:
        - BackstagePermissions
    post:
      summary: Creates backstage Permissions
      operationId: create-backstage-permissions
      responses:
        '201':
          $ref: '#/components/responses/BackstagePermissionsResponse'
      description: Creates backstage Permissions for a given account
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      requestBody:
        $ref: '#/components/requestBodies/BackstagePermissionsRequest'
      x-internal: true
      tags:
        - BackstagePermissions
    put:
      summary: Updates Backstage Permission
      operationId: update-backstage-permissions
      responses:
        '200':
          $ref: '#/components/responses/BackstagePermissionsResponse'
      description: Update Backstage Permission
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      x-internal: true
      requestBody:
        $ref: '#/components/requestBodies/BackstagePermissionsRequest'
      tags:
        - BackstagePermissions
  '/v1/status-info/{type}':
    parameters:
      - $ref: '#/components/parameters/StatusType'
    get:
      summary: Gets Status Info by type
      tags:
        - StatusInfo
      operationId: get-status-info-by-type
      description: Get status info for the given type
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      security:
        - x-api-key: []
      responses:
        '200':
          $ref: '#/components/responses/StatusInfoResponse'
      x-internal: true
    post:
      summary: Saves Status Info by type
      tags:
        - StatusInfo
      operationId: save-status-info-by-type
      responses:
        '201':
          $ref: '#/components/responses/StatusInfoResponse'
      description: Saves status info for the given type
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      requestBody:
        $ref: '#/components/requestBodies/StatusInfoRequest'
  '/v1/namespace-info/{accountIdentifier}':
    get:
      summary: Your GET endpoint
      responses:
        '200':
          $ref: '#/components/responses/NamespaceResponse'
      operationId: get-namespace-info
      description: Get the corresponding customer namepsace using account id.
      x-internal: true
      security:
        - x-api-key: []
      tags:
        - Namespace
    parameters:
      - schema:
          type: string
        name: accountIdentifier
        in: path
        required: true
    post:
      summary: Create Namespace
      operationId: create-namespace
      description: Create Namespace from accountId
      security:
        - x-api-key: []
      x-internal: true
      responses:
        '200':
          $ref: '#/components/responses/NamespaceResponse'
      tags:
        - Namespace
  '/v1/account-info/{namespace}':
    get:
      summary: Your GET endpoint
      responses:
        '200':
          $ref: '#/components/responses/NamespaceResponse'
      operationId: get-account-for-namespace
      security:
        - x-api-key: []
      tags:
        - AccountInfo
    parameters:
      - schema:
          type: string
        name: namespace
        in: path
        required: true
  '/v1/provision-idp/{accountIdentifier}':
    post:
      summary: Provision IDP
      operationId: provision-idp
      responses:
        '200':
          $ref: '#/components/responses/NamespaceResponse'
      tags:
        - Provision
      description: Provision IDP for given account
      security:
        - x-api-key: [ ]
    parameters:
      - schema:
          type: string
        name: accountIdentifier
        in: path
        required: true
  '/v1/account/{accountIdentifier}/onboarding/access-check':
    parameters:
      - name: accountIdentifier
        in: path
        required: true
        schema:
          type: string
        description: Identifier field of the account the resource is scoped to
    get:
      summary: Check if User is allowed to perform IDP onboarding workflow
      responses:
        '200':
          $ref: '#/components/responses/OnboardingAccessCheckResponse'
      operationId: onboarding-access-check-v1
      description: Check if User is allowed to perform IDP onboarding workflow
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      security:
        - x-api-key: []
      tags:
        - OnboardingResource
  '/v1/account/{accountIdentifier}/onboarding/harness-entities':
    parameters:
      - $ref: '#/components/parameters/AccountIdentifier'
    get:
      summary: Get Harness Entities
      tags:
        - OnboardingResource
      responses:
        '200':
          $ref: '#/components/responses/HarnessEntitiesResponse'
      operationId: get-harness-entities-v1
      description: Get Harness Entities
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Order'
        - $ref: '#/components/parameters/SearchTerm'
      security:
        - x-api-key: []
  '/v1/account/{accountIdentifier}/onboarding/import-harness-entities':
    parameters:
      - $ref: '#/components/parameters/AccountIdentifier'
    post:
      summary: Import Harness Entities to IDP
      operationId: import-harness-entities-v1
      description: Import Harness Entities to IDP
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      requestBody:
        $ref: '#/components/requestBodies/ImportHarnessEntitiesRequest'
      tags:
        - OnboardingResource
      responses:
        '200':
          $ref: '#/components/responses/ImportEntitiesResponse'
components:
  schemas:
    EnvironmentSecret:
      title: EnvironmentSecret
      x-stoplight:
        id: c62d4d8f19081
      type: object
      properties:
        identifier:
          type: string
        env_name:
          type: string
        secret_identifier:
          type: string
        decrypted_value:
          type: string
        created:
          type: integer
          format: int64
        updated:
          type: integer
          format: int64
    EnvironmentSecretRequest:
      title: EnvironmentSecretRequest
      x-stoplight:
        id: a94746e067851
      type: object
      properties:
        secret:
          $ref: '#/components/schemas/EnvironmentSecret'
    EnvironmentSecretResponse:
      title: EnvironmentSecretResponse
      x-stoplight:
        id: e8875709fc5b1
      type: object
      properties:
        secret:
          $ref: '#/components/schemas/EnvironmentSecret'
    BackstagePermissions:
      title: BackstagePermissions
      x-stoplight:
        id: mc6dey4g3grx5
      type: object
      properties:
        identifer:
          type: string
        permissions:
          type: array
          items:
            type: string
        user_group:
          type: string
        created:
          type: integer
          format: int64
        updated:
          type: integer
          format: int64
    BackstagePermissionsRequest:
      title: BackstagePermissionsRequest
      x-stoplight:
        id: ixq59j5xh1mr3
      type: object
      properties:
        data:
          $ref: '#/components/schemas/BackstagePermissions'
    BackstagePermissionsResponse:
      title: BackstagePermissionsResponse
      x-stoplight:
        id: iy9wq68joydm6
      type: object
      properties:
        data:
          $ref: '#/components/schemas/BackstagePermissions'
    StatusInfo:
      title: StatusInfo
      x-stoplight:
        id: ae1f1702dd443
      type: object
      properties:
        currentStatus:
          type: string
          enum:
            - COMPLETED
            - RUNNING
            - PENDING
            - FAILED
            - NOT_FOUND
        reason:
          type: string
        updatedAt:
          type: integer
          format: int64
    StatusInfoResponse:
      title: StatusInfoResponse
      x-stoplight:
        id: d5b32dc406018
      type: object
      properties:
        status:
          $ref: '#/components/schemas/StatusInfo'
    StatusInfoRequest:
      title: StatusInfoRequest
      x-stoplight:
        id: m2r87gp8mfed7
      type: object
      properties:
        status:
          $ref: '#/components/schemas/StatusInfo'
    NamespaceInfo:
      title: NamespaceInfo
      x-stoplight:
        id: 8ba4gj00yfwre
      type: object
      properties:
        accountIdentifier:
          type: string
        namespace:
          type: string
      description: Namespace response body content
    NamepsaceResponse:
      $ref: '#/components/schemas/NamespaceInfo'
      description: Namespace response body
    ImportHarnessEntitiesRequest:
      title: ImportHarnessEntitiesRequest
      x-stoplight:
        id: amr368rxqugif
      type: object
      x-examples: {}
      description: Details of Harness Entities and Catalog Location info
      properties:
        catalogConnectorInfo:
          $ref: '#/components/schemas/CatalogConnectorInfo'
        entities:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/EntitiesForImport'
      required:
        - catalogConnectorInfo
        - entities
    CatalogConnectorInfo:
      title: CatalogConnectorInfo
      x-stoplight:
        id: k72jbjtz6j5jh
      type: object
      description: Details of IDP catalog connector
      properties:
        sourceConnector:
          $ref: '#/components/schemas/ConnectorDetails'
        repo:
          type: string
        branch:
          type: string
        path:
          type: string
        infraConnector:
          $ref: '#/components/schemas/ConnectorDetails'
      required:
        - sourceConnector
        - repo
        - branch
        - path
        - infraConnector
    OnboardingAccessCheckResponse:
      title: OnboardingAccessCheckResponse
      x-stoplight:
        id: a46k1ggo6ptxc
      type: object
      x-examples: {}
      description: Response to check whether user is allowed to perform IDP onboarding or not
      properties:
        access:
          type: string
      required:
        - access
    HarnessEntitiesResponse:
      title: HarnessEntitiesResponse
      x-stoplight:
        id: 06ugy0j5318dr
      type: object
      x-examples: {}
      description: Response for harness entities mapping with backstage entities
      properties:
        orgCount:
          type: integer
        projectCount:
          type: integer
        serviceCount:
          type: integer
        harnessBackstageEntities:
          type: array
          items:
            $ref: '#/components/schemas/HarnessBackstageEntities'
      required:
        - orgCount
        - projectCount
        - serviceCount
        - harnessBackstageEntities
    ImportEntitiesResponse:
      title: ImportEntitiesResponse
      x-stoplight:
        id: mbqihy6732hau
      type: object
      description: Response for import / save harness entities to IDP
      properties:
        status:
          type: string
      required:
        - status
    EntitiesForImport:
      title: EntitiesForImport
      x-stoplight:
        id: 0gdm8g08cv51p
      type: object
      description: Details of Harness Entities to import
      x-examples: {}
      properties:
        identifier:
          type: string
          minLength: 1
        entityType:
          type: string
      required:
        - identifier
        - entityType
    HarnessBackstageEntities:
      title: HarnessBackstageEntities
      x-stoplight:
        id: 7ox4rwh5ho9ue
      type: object
      description: Harness entities mapping with backstage entities
      properties:
        name:
          type: string
        system:
          type: string
        owner:
          type: string
        type:
          type: string
        identifier:
          type: string
        entityType:
          type: string
      required:
        - name
        - system
        - owner
        - type
        - identifier
        - entityType
    ConnectorDetails:
      title: ConnectorDetails
      x-stoplight:
        id: t8ug6b9zgqgup
      type: object
      properties:
        identifier:
          type: string
        type:
          type: string
      required:
        - identifier
        - type
      description: Connector details containing identifier and type
  parameters:
    AccountHeader:
      name: Harness-Account
      in: header
      required: false
      schema:
        type: string
      description: 'Identifier field of the account the resource is scoped to. This is required for Authorization methods other than the x-api-key header. If you are using the x-api-key header, this can be skipped.'
    Limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
      description: 'Pagination: Number of items to return'
    Page:
      name: page
      in: query
      required: false
      schema:
        type: integer
      description: "Pagination page number strategy: Specify the page number within the paginated collection related to the number of items in each page\t"
    Sort:
      name: sort
      in: query
      required: false
      schema:
        type: string
      description: Parameter on the basis of which sorting is done.
    EnvironmentSecret:
      name: environment-secret
      in: path
      required: true
      schema:
        type: string
      description: Identifier field of the environment secret the resource is scoped to
    StatusType:
      name: type
      in: path
      required: true
      schema:
        type: string
        enum:
          - infra
          - onboarding
    AccountIdentifier:
      name: accountIdentifier
      in: path
      required: true
      schema:
        type: string
      description: Identifier field of the account the resource is scoped to
    Order:
      name: order
      in: query
      required: false
      schema:
        type: string
      description: Order on the basis of which sorting is done.
    SearchTerm:
      name: search_term
      in: query
      required: false
      schema:
        type: string
      description: This would be used to filter resources having attributes matching the search term.
  requestBodies:
    EnvironmentSecretRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EnvironmentSecretRequest'
        application/yaml:
          schema:
            $ref: '#/components/schemas/EnvironmentSecretRequest'
    EnvironmentSecretRequestList:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/EnvironmentSecretRequest'
        application/yaml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/EnvironmentSecretRequest'
    BackstagePermissionsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BackstagePermissionsRequest'
    StatusInfoRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StatusInfoRequest'
        application/yaml:
          schema:
            $ref: '#/components/schemas/StatusInfoRequest'
    ImportHarnessEntitiesRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ImportHarnessEntitiesRequest'
          examples: {}
      description: Details of Harness Entities and Catalog Location info
  responses:
    EnvironmentSecretResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EnvironmentSecretResponse'
        application/yaml:
          schema:
            $ref: '#/components/schemas/EnvironmentSecretResponse'
    EnvironmentSecretResponseList:
      description: Example response
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/EnvironmentSecretResponse'
        application/yaml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/EnvironmentSecretResponse'
      headers:
        X-Total-Elements:
          schema:
            type: integer
          description: Total number of elements returned in Paginated response.
        X-Page-Number:
          schema:
            type: integer
          description: Page number in Paginated response.
        X-Page-Size:
          schema:
            type: integer
          description: Maximum page size in Paginated response.
    BackstagePermissionsResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BackstagePermissionsResponse'
    StatusInfoResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StatusInfoResponse'
        application/yaml:
          schema:
            $ref: '#/components/schemas/StatusInfoResponse'
    NamespaceResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NamepsaceResponse'
        application/xml:
          schema:
            $ref: '#/components/schemas/NamepsaceResponse'
    OnboardingAccessCheckResponse:
      description: IDP Onboarding AccessCheck response for given user account
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OnboardingAccessCheckResponse'
    HarnessEntitiesResponse:
      description: Response for harness entities mapping with backstage entities
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HarnessEntitiesResponse'
          examples: {}
      headers:
        X-Total-Elements:
          schema:
            type: integer
          description: Total number of elements returned in Paginated response.
        X-Page-Number:
          schema:
            type: integer
          description: Page number in Paginated response.
        X-Page-Size:
          schema:
            type: integer
          description: Maximum page size in Paginated response.
    ImportEntitiesResponse:
      description: Response for import / save harness entities to IDP
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ImportEntitiesResponse'
  securitySchemes:
    x-api-key:
      name: x-api-key
      type: apiKey
      in: header
tags:
  - name: EnvironmentSecret
    description: Mapping of Environment Variables to Secrets
  - name: BackstagePermissions
    description: Backstage Permissions
