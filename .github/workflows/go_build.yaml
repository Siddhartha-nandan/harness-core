name: Go Build
on:
  pull_request:
    branches:
      - master
      - develop

env:
  BUILD_PURPOSE: RELEASE

jobs:
  gobuild:
    if: contains(github.event.pull_request.labels.*.name, 'go') || contains(github.event.pull_request.labels.*.name, 'gojava')
    name: Go Build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Building expression service code
        run: |
          touch bazel-credentials.bzl
          echo $HOME
          id
      
      - run: printenv
      
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: '^1.13.1' # The Go version to download (if necessary) and use.
      - run: |
          printenv
          go version

      - name: Building commons code
        run: |
          echo "Building golang commons code using bazel..."
          bazel build //commons/...

      - name: Building product code
        run: |
          echo "Building golang product code using bazel..."
          bazel build //product/... --javacopt=' -XepDisableAllChecks'

      - name: Building gopath
        run: |
          echo "Building gopath"
          bazel build :gopath --javacopt=' -XepDisableAllChecks'

      - name: Testing commons
        run: |
          echo "Testing golang commons code using bazel..."
          bazel test --test_output=all //commons/...

      - name: Testing product
        run: |
          echo "Testing golang product code using bazel..."
          bazel test --test_output=all //product/... --javacopt=' -XepDisableAllChecks'

      - name: Coverage
        run: |
          export GOPATH=$(go env GOPATH)
          export PATH=$PATH:$GOPATH/bin
          echo $PATH
          echo $GOPATH
          echo "Adding gocovmerge package... "
          go install github.com/wadey/gocovmerge@latest
          tools/go/generate_coverage.sh func
