basePath: /
definitions:
  store.DequeueItemMetadata:
    properties:
      currentRetryCount:
        type: integer
      maxProcessingTime:
        type: number
    type: object
  store.DequeueRequest:
    properties:
      batchSize:
        type: integer
      consumerName:
        type: string
      topic:
        type: string
    type: object
  store.DequeueResponse:
    properties:
      itemId:
        type: string
      metadata:
        $ref: '#/definitions/store.DequeueItemMetadata'
      payload: {}
      queueKey:
        type: string
      timeStamp:
        type: integer
    type: object
  store.EnqueueRequest:
    properties:
      payload:
        additionalProperties: true
        type: object
      producerName:
        type: string
      subTopic:
        type: string
      topic:
        type: string
    type: object
  store.EnqueueResponse:
    properties:
      itemId:
        description: ItemId is the identifier of the task in the Queue
        type: string
    type: object
host: localhost:9091
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a queuing client.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Doc- hsqs
  version: "1.0"
paths:
  /v1/dequeue:
    post:
      consumes:
      - application/json
      description: Dequeue a request
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/store.DequeueRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.DequeueResponse'
      summary: Dequeue in Redis
  /v1/queue:
    post:
      consumes:
      - application/json
      description: Enqueue the request
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/store.EnqueueRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.EnqueueResponse'
      summary: Enqueue
schemes:
- http
swagger: "2.0"
